{"meta":{"title":"一盒酥","subtitle":null,"description":null,"author":"一盒酥","url":"http://ihozh.com"},"pages":[{"title":"tags","date":"2016-03-17T06:43:40.000Z","updated":"2016-03-17T06:55:30.000Z","comments":true,"path":"tags/index.html","permalink":"http://ihozh.com/tags/index.html","excerpt":"","text":""},{"title":"about","date":"2016-03-14T05:36:52.000Z","updated":"2016-03-14T05:50:35.000Z","comments":true,"path":"about/index.html","permalink":"http://ihozh.com/about/index.html","excerpt":"","text":"一盒的博客"},{"title":"img","date":"2016-03-16T01:25:15.000Z","updated":"2016-03-16T01:25:15.000Z","comments":true,"path":"img/index.html","permalink":"http://ihozh.com/img/index.html","excerpt":"","text":""},{"title":"categories","date":"2016-03-16T02:13:57.000Z","updated":"2016-03-17T06:55:13.000Z","comments":true,"path":"categories/index.html","permalink":"http://ihozh.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"贝叶斯统计初探","slug":"贝叶斯统计初探","date":"2017-09-01T03:46:44.000Z","updated":"2017-09-07T21:34:04.000Z","comments":true,"path":"2017/08/31/贝叶斯统计初探/","link":"","permalink":"http://ihozh.com/2017/08/31/贝叶斯统计初探/","excerpt":"引子：贝叶斯统计和经典统计是两种不同的思考方法，有不同也有联系，一方面，不能把他们绝对地视为完全对立的不同方法。 另一方面，虽然在某些特殊条件下，贝叶斯统计和经典统计会在数学形式上表现得一模一样，但我们并不能简单的就在两个数学公式之间画个等号。为了探究关于贝叶斯和经典统计的不同思考方式，我像苦行僧一般修行，翻阅大量的资料，苦思冥想，最终悟出一二。就像突然悟出了某本武林秘籍的真谛，激动之情难以言表。现在就慢慢拨开贝叶斯统计的表象，看看他里边究竟是什么。 不论是概率论，随机过程，系统辨识，还是机器学习，概率图模型，模式识别，贝叶斯都是一个不可能抹去的名字。这也是第一次，我感受到数学和哲学之间纠缠不清的暧昧关系，我也想先从哲学的角度去看看贝叶斯统计和经典统计。","text":"引子：贝叶斯统计和经典统计是两种不同的思考方法，有不同也有联系，一方面，不能把他们绝对地视为完全对立的不同方法。 另一方面，虽然在某些特殊条件下，贝叶斯统计和经典统计会在数学形式上表现得一模一样，但我们并不能简单的就在两个数学公式之间画个等号。为了探究关于贝叶斯和经典统计的不同思考方式，我像苦行僧一般修行，翻阅大量的资料，苦思冥想，最终悟出一二。就像突然悟出了某本武林秘籍的真谛，激动之情难以言表。现在就慢慢拨开贝叶斯统计的表象，看看他里边究竟是什么。 不论是概率论，随机过程，系统辨识，还是机器学习，概率图模型，模式识别，贝叶斯都是一个不可能抹去的名字。这也是第一次，我感受到数学和哲学之间纠缠不清的暧昧关系，我也想先从哲学的角度去看看贝叶斯统计和经典统计。 简单来说，经典统计是对世界，对事件的客观认识。客观认识是符合直觉的，一个自然界的规律已经存在，如果想要了解这个规律，就要一遍遍的观察。就拿抛硬币这个最简单的例子来说，当一枚硬币造好的那一刻起，抛出正面和抛出反面的可能性就被决定了，只要一个有毅力的人不断的抛这枚硬币，一千次，一万次，根据弱大数定律，最终结果会无限逼近这个可能性，即出现多少次正面，多少次反面。这就是一个最简单的经典统计的例子，有些人发现了，要发现这个出现正反面的可能性，需要重复性的试验，所以这也被称作频率统计。自然规律已经存在，剩下的就是靠样本来发现。 贝叶斯统计，在哲学上完全相反。贝叶斯们认为这个世界是可以由我们主动认识的，不用被动的去接受自然规律，而是主动去找到这个自然规律。我认为，这也是理解贝叶斯统计的核心。为什么这么说呢？还是以抛硬币为例，硬币已经造好，如何通过有限次数的试验得到出现正反面的可能性？贝叶斯们认为，这枚银币什么可能都会有，它有可能每次都能抛出正面，也有可能每次都是反面，当然也有可能正反各占一半，这个概率，就是先验概率。引出另一个重要的概念，这个概率是一个随机变量的概率。硬币的每一种可能性，在贝叶斯们看来仅仅是一个随机变量。在这个假设条件下，即假设银币的正反可能性为某值，开始观察结果，根据条件概率，就可以得到当前结果下的可能性估计，这就是后验概率。 总结来看，经典统计是对世界的客观认识，而贝叶斯统计是对世界的主观认识。但是为什么客观认识的世界能和主观认识的世界是同样的呢？这是一个深奥的哲学问题，我不是哲学家，解答不了，并且这也超出了这篇文章的探索范围。 有好奇的朋友可以去看看杰恩斯的《概率论沉思录》，这本凝聚了他40年心血的著作有对这个问题透彻的思考。在这里我们认为主观和客观的世界完美的统一了。 有坑：想要了解一个概念，首先看看不要怎样去认为它。在网络上很多分析贝叶斯和经典统计的文章提供了不同的视角和结论。有时候不能说这些结论不对，但是可能太过片面，让我走了不少弯路。 是否有先验分布仅仅体现在数学公式上，如果贝叶斯的最大后验估计中的先验分布是均匀分布，那和经典统计的极大似然估计连数学公式都统一了，但是原理并不相同。 概率贝叶斯统计的出现解决了一些只能用概率解释的问题。千万不要死磕概率的意义，除非想成为哲学家。","categories":[{"name":"苦境","slug":"苦境","permalink":"http://ihozh.com/categories/苦境/"}],"tags":[{"name":"概率论","slug":"概率论","permalink":"http://ihozh.com/tags/概率论/"},{"name":"贝叶斯","slug":"贝叶斯","permalink":"http://ihozh.com/tags/贝叶斯/"}]},{"title":"Bernoulli process 伯努利过程","slug":"Bernoulli-process-伯努利过程","date":"2017-08-21T05:46:47.000Z","updated":"2017-09-01T03:46:57.000Z","comments":true,"path":"2017/08/21/Bernoulli-process-伯努利过程/","link":"","permalink":"http://ihozh.com/2017/08/21/Bernoulli-process-伯努利过程/","excerpt":"伯努利试验和伯努利过程当一系列的随机事件发生时，包含这些随机变量的集合，称为随机过程。 根据随机变量的不同，随机过程也有很多种，如伯努利过程（离散，无记忆），泊松过程（连续，无记忆），马尔可夫链（有记忆，不独立）等。伯努利过程是随机过程中最简单的形式。 抛硬币是概率统计中一个著名的试验，每次抛出银币得到正面或者反面，抛第二次时和第一次的结果没有任何关联。每次抛硬币就是一个伯努利试验。 给出定义： 伯努利试验是只有两种可能结果的单次随机试验，对于一个随机变量X而言，有 P(X=1)=p P(X=0)=1-p 这就是一个yes or no 的问题 重复的独立同分布的伯努利试验就是伯努利过程。伯努利过程有三个常见的模型。","text":"伯努利试验和伯努利过程当一系列的随机事件发生时，包含这些随机变量的集合，称为随机过程。 根据随机变量的不同，随机过程也有很多种，如伯努利过程（离散，无记忆），泊松过程（连续，无记忆），马尔可夫链（有记忆，不独立）等。伯努利过程是随机过程中最简单的形式。 抛硬币是概率统计中一个著名的试验，每次抛出银币得到正面或者反面，抛第二次时和第一次的结果没有任何关联。每次抛硬币就是一个伯努利试验。 给出定义： 伯努利试验是只有两种可能结果的单次随机试验，对于一个随机变量X而言，有 P(X=1)=p P(X=0)=1-p 这就是一个yes or no 的问题 重复的独立同分布的伯努利试验就是伯努利过程。伯努利过程有三个常见的模型。 二项分布例子二项分布（Binomial distribution） 例：随机抛出硬币n次，出现k次正面朝上的概率(S=k)，每次正面概率为p。 这是一个典型的二项分布问题。抛出正面为成功，结果为1；抛出反面为失败，记为0.在n次中有k次正面朝上，k次朝上的试验也是随机分布在k次试验中，可以得到二项分布的概率： P(S=k)=\\binom{n}{k}p^k(1-p)^{n-k}E(S)=n\\cdot pVar(S)=n\\cdot p\\cdot (1-p)二项式系数二项分布之所以叫这个名字，因为二项分布的公式带二项系数。 来看看帕斯卡／杨辉三角（Pascal’s triangle）： 每一个元素都是元素上方两元素相加得到。将第n行所有的元素加起来有 $2^n$，这也是n次试验的样本空间。第n行第k个元素对应n次试验，k次成功，n-k次失败的可能性。 几何上的理解 几何分布例子几何分布（Geometric distribution）几何分布的典型问题是第一次成功问题。将k次成功问题的反过来，第一次成功需要进过几次试验？ 例：连续抛硬币，第一次出现正面的概率（T=t） 假设在第t次出现正面，则t次之前都会是反面 P(T=t)=(1-p)^{t-1}pE(T)=\\frac{1}{p}Var(T)=\\frac{1-p}{p^2}特性几何分布是无记忆的，并且分布具有相似性。每次新的试验与之前的结果无关。假如说已经抛了10次硬币并且都是反面，第11次抛硬币概率与第一次相同。如同将前十次的结果去掉，将剩下的部分归一化，得到的分布和第一次抛硬币的概率分布是完全相同的。 负二项分布例子第一次成功问题是几何分布，k次成功问题便是负二项分布。 例：连续抛硬币，第k次出现正面的概率。 Y_k=T_1+...+T_k考虑到第k次成功，就要考虑到第k-1次成功，k次成功和k-1次成功是独立的。其实可以换个角度来思考，即所有到成功k次时即终止的独立试验中，失败次数n-k的分布。也可以认为是k个独立的二项分布。 P(Y_k=t)=\\binom{t-1}{k-1}p^{k-1}(1-p)^{t-k}pE(Y_k)=\\frac{k}{p}","categories":[{"name":"苦境","slug":"苦境","permalink":"http://ihozh.com/categories/苦境/"}],"tags":[{"name":"微积分","slug":"微积分","permalink":"http://ihozh.com/tags/微积分/"},{"name":"二项分布","slug":"二项分布","permalink":"http://ihozh.com/tags/二项分布/"},{"name":"伯努利","slug":"伯努利","permalink":"http://ihozh.com/tags/伯努利/"}]},{"title":"复数的矩阵表示","slug":"复数的矩阵表示","date":"2017-08-20T07:25:57.000Z","updated":"2017-09-01T03:47:03.000Z","comments":true,"path":"2017/08/20/复数的矩阵表示/","link":"","permalink":"http://ihozh.com/2017/08/20/复数的矩阵表示/","excerpt":"复数的本质是找到一个域，在这个域中可以解决类似 $x^2+1=0$ 这种在实数域R下不能解决的问题。 Ahlfors在《COMPLEX ANALYSIS》一书中给出一种枚举 $\\alpha+\\beta i$ 构造复数域的方法并且给予证明。当然，还有其他的构造方法。 复数可以用类似平面的方式表示，在复平面中，横轴表示实数，纵轴表示虚数。但是复数域和平面空间并不是同构的。因为他们的维度不同。此外，在平面空间，并没有所谓的向量乘法，如何在平面空间使用乘法运算？ 引入矩阵( $\\alpha$, $\\beta$ 都为实数)： \\begin{pmatrix} \\alpha & \\beta\\\\ -\\beta & \\alpha \\end{pmatrix}","text":"复数的本质是找到一个域，在这个域中可以解决类似 $x^2+1=0$ 这种在实数域R下不能解决的问题。 Ahlfors在《COMPLEX ANALYSIS》一书中给出一种枚举 $\\alpha+\\beta i$ 构造复数域的方法并且给予证明。当然，还有其他的构造方法。 复数可以用类似平面的方式表示，在复平面中，横轴表示实数，纵轴表示虚数。但是复数域和平面空间并不是同构的。因为他们的维度不同。此外，在平面空间，并没有所谓的向量乘法，如何在平面空间使用乘法运算？ 引入矩阵( $\\alpha$, $\\beta$ 都为实数)： \\begin{pmatrix} \\alpha & \\beta\\\\ -\\beta & \\alpha \\end{pmatrix} 用矩阵表示复数。 定义： f(\\alpha+\\beta i)= \\begin{bmatrix} \\alpha & \\beta\\\\ -\\beta & \\alpha \\end{bmatrix}加法： f（(\\alpha_1+\\beta_1i)+(\\alpha_2+\\beta_2i)) =f((\\alpha_1+\\alpha_2)+(\\beta_1+\\beta_2)i)\\\\ =\\begin{bmatrix} \\alpha_1+\\alpha_2 & \\beta_1+\\beta_2\\\\ -\\beta_1-\\beta_2 & \\alpha_1+\\alpha_2 \\end{bmatrix} =\\begin{bmatrix} \\alpha_1 & \\beta_1\\\\ -\\beta_1 & \\alpha_1 \\end{bmatrix} +\\begin{bmatrix} \\alpha_2 & \\beta_2\\\\ -\\beta_2 & \\alpha_2 \\end{bmatrix}乘法： f（(\\alpha_1+\\beta_1i)(\\alpha_2+\\beta_2i)) =f((\\alpha_1\\alpha_2-\\beta_1\\beta_2)+(\\alpha_2\\beta_1+\\alpha_1\\beta_2)i)\\\\ =\\begin{bmatrix} \\alpha_1\\alpha_2-\\beta_1\\beta_2 & \\alpha_2\\beta_1+\\alpha_1\\beta_2\\\\ -\\alpha_2\\beta_1-\\alpha_1\\beta_2 & \\alpha_1\\alpha_2-\\beta_1\\beta_2 \\end{bmatrix} =\\begin{bmatrix} \\alpha_1 & b_1\\\\ -\\beta_1 & \\alpha_1 \\end{bmatrix} \\begin{bmatrix} \\alpha_2 & \\beta_2\\\\ -\\beta_2 & \\alpha_2 \\end{bmatrix}将矩阵分解： \\begin{bmatrix} \\alpha & \\beta\\\\ -\\beta & \\alpha \\end{bmatrix} =\\alpha\\begin{bmatrix} 1 & 0\\\\ 0 & 1 \\end{bmatrix} +\\beta\\begin{bmatrix} 0 & -1\\\\ -1 & 0 \\end{bmatrix} =\\alpha I+\\beta J其中 J^2=-1另外，复数的共轭实际上是矩阵的转置。 f(\\alpha-\\beta i)= \\begin{bmatrix} \\alpha & -\\beta\\\\ \\beta & \\alpha \\end{bmatrix}复数的模为矩阵的行列式。使用极坐标的转换公式可以得到复数在极坐标下的表示。 使用矩阵表示的好处，可以把复数的乘法和旋转联系起来。复数的乘法实际上就是在复数域上的旋转，2*2矩阵表示的就是平面上的旋转操作。","categories":[{"name":"苦境","slug":"苦境","permalink":"http://ihozh.com/categories/苦境/"}],"tags":[{"name":"矩阵","slug":"矩阵","permalink":"http://ihozh.com/tags/矩阵/"},{"name":"复数","slug":"复数","permalink":"http://ihozh.com/tags/复数/"}]},{"title":"Complex Analysis-Ahlfors学习笔记","slug":"Complex-Analysis-Ahlfors","date":"2017-08-19T07:39:08.000Z","updated":"2017-09-01T03:47:09.000Z","comments":true,"path":"2017/08/19/Complex-Analysis-Ahlfors/","link":"","permalink":"http://ihozh.com/2017/08/19/Complex-Analysis-Ahlfors/","excerpt":"书名：《COMPLEX ANALYSIS》 An Introduction to the Theory of Analytic Functions of One Complex Variable 作者： Lars V. Ahlfors 哈佛大学 数学系 版本： 3rd","text":"书名：《COMPLEX ANALYSIS》 An Introduction to the Theory of Analytic Functions of One Complex Variable 作者： Lars V. Ahlfors 哈佛大学 数学系 版本： 3rd 第一章 复数1.1 复数的代数表示1.1.1 算数操作符 复数代数表示： \\alpha+\\beta i 实数的运算对复数同样适用，包括加减乘除 1 $i^n$ y有四种可能值 i^0=1,i^1=1,i^2=-1,i^3=-i 1.1.2 平方根\\sqrt{\\alpha+i\\beta}=\\\\ \\pm \\left ( \\sqrt{\\frac{\\alpha+\\sqrt{\\alpha^2+\\beta^2}}{2}} +i\\frac{\\beta}{|\\beta|} \\sqrt{\\frac{-\\alpha+\\sqrt{\\alpha^2+\\beta^2}}{2}} \\right)要注意选择符号符合的解。 1.1.3 证明回顾一下实数，用符号R表示。首先R是一个域（field），这说明加法和乘法（addition and multiplication）是定义了的并且满足交换律（commutative law），结合律（associative law）和分配律（distributive law）。0和1分别是加法和乘法的中性元素（neutral elements）。与未知数相加相乘（本身不为0）都有解。每个域都是整环。 关于整环，交换环，参考抽象代数（abstract algebra）。 此外，域还有个特性是顺序关联（order relation）。(1) 0 不是正数; (2) 如果a不等于0，a或者-a是正数; (3) 正数相加或者相乘还是正数。 最后，R满足每一个增加和有界的序列都有限制。 但是，$x^2+1=0$在R上没有解。假设有一个域F包括R，在F内，方程有解，为i，-i。再假设F内的子集域C，包括所有的 $\\alpha+\\beta i$。 不同的F得到不同的C，计为C‘，C和C’是同构的（field isomorphism）。 现在还没有证明F也存在同样的性质。 最简单的构造方法，枚举所有的 $\\alpha+\\beta i$（+和i仅仅当作符号）。定义加法和乘法。定义形式 $a+0i$ 是和R同构的子域，元素 $0 + i1$ 是$x^2+1=0$的解。得到 $(0 + i1)^2 = -(1 + i0)$。F域因此满足了要求，而且和C相同。 复数域的存在得证。 1.1.4 共轭和绝对值因为方程有两个根，所以i和-i有相同的属性。用-i代替i就得到共轭。对于复数 $a$ 有共轭 $\\bar{a}$, 有如下属性： \\overline{a+b}=\\overline{a}+\\overline{b}\\overline{ab}=\\overline{a}\\cdot\\overline{b}a\\overline{a}=|a|^2=\\alpha^2+\\beta^2|a|被称做模或者绝对值。绝对值有属性： |a|=|\\overline{a}||ab|=|a|\\cdot|b|注意共轭和模的关系，相似的，在电力系统中，总功率也是PQ的共轭乘积。 1.1.5 不等性复数空间没有顺序关系，所以比较大小必须要用实数。三角不等式（triangle inequality）： |a+b|\\leq |a|+|b|注意柯西不等式和拉格朗日恒等式模平方=点乘平方+叉乘平方","categories":[{"name":"苦境","slug":"苦境","permalink":"http://ihozh.com/categories/苦境/"}],"tags":[{"name":"微积分","slug":"微积分","permalink":"http://ihozh.com/tags/微积分/"},{"name":"复变函数","slug":"复变函数","permalink":"http://ihozh.com/tags/复变函数/"},{"name":"笔记","slug":"笔记","permalink":"http://ihozh.com/tags/笔记/"},{"name":"经典","slug":"经典","permalink":"http://ihozh.com/tags/经典/"}]},{"title":"Python 模块化编程 - 笔记","slug":"Python-模块化编程-笔记","date":"2017-06-27T08:19:20.000Z","updated":"2017-06-27T09:39:08.000Z","comments":true,"path":"2017/06/27/Python-模块化编程-笔记/","link":"","permalink":"http://ihozh.com/2017/06/27/Python-模块化编程-笔记/","excerpt":"","text":"","categories":[{"name":"搏浪","slug":"搏浪","permalink":"http://ihozh.com/categories/搏浪/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://ihozh.com/tags/Python/"},{"name":"编程","slug":"编程","permalink":"http://ihozh.com/tags/编程/"}]},{"title":"Matplotlib Backend","slug":"Matplotlib-Backend","date":"2017-06-27T05:50:49.000Z","updated":"2017-06-28T10:03:07.000Z","comments":true,"path":"2017/06/27/Matplotlib-Backend/","link":"","permalink":"http://ihozh.com/2017/06/27/Matplotlib-Backend/","excerpt":"introductionA lot of documentation on the website and in the mailing lists refers to the “backend” and many new users are confused by this term. matplotlib targets many different use cases and output formats. Some people use matplotlib interactively from the python shell and have plotting windows pop up when they type commands. Some people embed matplotlib into graphical user interfaces like wxpython or pygtk to build rich applications. Others use matplotlib in batch scripts to generate postscript images from some numerical simulations, and still others in web application servers to dynamically serve up graphs.","text":"introductionA lot of documentation on the website and in the mailing lists refers to the “backend” and many new users are confused by this term. matplotlib targets many different use cases and output formats. Some people use matplotlib interactively from the python shell and have plotting windows pop up when they type commands. Some people embed matplotlib into graphical user interfaces like wxpython or pygtk to build rich applications. Others use matplotlib in batch scripts to generate postscript images from some numerical simulations, and still others in web application servers to dynamically serve up graphs.To support all of these use cases, matplotlib can target different outputs, and each of these capabilities is called a backend; the “frontend” is the user facing code, i.e., the plotting code, whereas the “backend” does all the hard work behind-the-scenes to make the figure. There are two types of backends: user interface backends (for use in pygtk, wxpython, tkinter, qt4, or macosx; also referred to as “interactive backends”) and hardcopy backends to make image files (PNG, SVG, PDF, PS; also referred to as “non-interactive backends”). There are four ways to configure your backend. If they conflict each other, the method mentioned last in the following list will be used, e.g. calling use() will override the setting in your matplotlibrc. The backend parameter in your matplotlibrc file (see Customizing matplotlib): 1backend : WXAgg # use wxpython with antigrain (agg) rendering Setting the MPLBACKEND environment variable, either for your current shell or for a single script: 123&gt; export MPLBACKEND=&quot;module://my_backend&quot;&gt; python simple_plot.py&gt; MPLBACKEND=&quot;module://my_backend&quot; python simple_plot.py Setting this environment variable will override the backend parameter in any matplotlibrc, even if there is a matplotlibrc in your current working directory. Therefore setting MPLBACKEND globally, e.g. in your .bashrc or .profile, is discouraged as it might lead to counter-intuitive behavior. To set the backend for a single script, you can alternatively use the -d command line argument: 1&gt; python script.py -dbackend This method is deprecated as the -d argument might conflict with scripts which parse command line arguments (see issue #1986). You should use MPLBACKEND instead. If your script depends on a specific backend you can use the use() function:12import matplotlibmatplotlib.use(&apos;PS&apos;) # generate postscript output by default If you use the use() function, this must be done before importing matplotlib.pyplot. Calling use() after pyplot has been imported will have no effect. Using use() will require changes in your code if users want to use a different backend. Therefore, you should avoid explicitly calling use() unless absolutely necessary. NoteBackend name specifications are not case-sensitive; e.g., ‘GTKAgg’ and ‘gtkagg’ are equivalent. With a typical installation of matplotlib, such as from a binary installer or a linux distribution package, a good default backend will already be set, allowing both interactive work and plotting from scripts, with output to the screen and/or to a file, so at least initially you will not need to use any of the methods given above. If, however, you want to write graphical user interfaces, or a web application server (Matplotlib in a web application server), or need a better understanding of what is going on, read on. To make things a little more customizable for graphical user interfaces, matplotlib separates the concept of the renderer (the thing that actually does the drawing) from the canvas (the place where the drawing goes). The canonical renderer for user interfaces is Agg which uses the Anti-Grain Geometry C++ library to make a raster (pixel) image of the figure. All of the user interfaces except macosx can be used with agg rendering, e.g., WXAgg, GTKAgg, QT4Agg, QT5Agg, TkAgg. In addition, some of the user interfaces support other rendering engines. For example, with GTK, you can also select GDK rendering (backend GTK deprecated in 2.0) or Cairo rendering (backend GTKCairo). For the rendering engines, one can also distinguish between vector or raster renderers. Vector graphics languages issue drawing commands like “draw a line from this point to this point” and hence are scale free, and raster backends generate a pixel representation of the line whose accuracy depends on a DPI setting. Here is a summary of the matplotlib renderers (there is an eponymous backed for each; these are non-interactive backends, capable of writing to a file): Renderer Filetypes Description AGG png raster graphics – high quality images using the Anti-Grain Geometry engine PS ps eps vector graphics – Postscript output PDF PDF vector graphics – Portable Document Format SVG svg vector graphics – Scalable Vector Graphics Cairo png ps pdf svg vector graphics – Cairo graphics GDK png jpg tiff raster graphics – the Gimp Drawing Kit Deprecated in 2.0 And here are the user interfaces and renderer combinations supported; these are interactive backends, capable of displaying to the screen and of using appropriate renderers from the table above to write to a file: Backend Description GTKAgg Agg rendering to a GTK 2.x canvas (requires PyGTK and pycairo or cairocffi; Python2 only) GTK3Agg Agg rendering to a GTK 3.x canvas (requires PyGObject and pycairo or cairocffi) GTK GDK rendering to a GTK 2.x canvas (not recommended and d eprecated in 2.0) (requires PyGTK and pycairo or cairocffi; Python2 only) GTKCairo Cairo rendering to a GTK 2.x canvas (requires PyGTK and pycairo or cairocffi; Python2 only) GTK3Cairo Cairo rendering to a GTK 3.x canvas (requires PyGObject and pycairo or cairocffi) WXAgg Agg rendering to to a wxWidgets canvas (requires wxPython) WX Native wxWidgets drawing to a wxWidgets Canvas (not recommended and deprecated in 2.0) (requires wxPython) TkAgg Agg rendering to a Tk canvas (requires TkInter) Qt4Agg Agg rendering to a Qt4 canvas (requires PyQt4 or pyside) Qt5Agg Agg rendering in a Qt5 canvas (requires PyQt5) macosx Cocoa rendering in OSX windows (presently lacks blocking show() behavior when matplotlib is in non-interactive mode) applicationusing matplotlib with pygameMatplotlib is an open source library for easy plotting. We can integrate Matplotlib into Pygame game and create various plots. In order to integrate Matplotlib with Pygame, we need to use a non-interactive backend, otherwise Matplotlib will present us with a GUI window by default. We will import the main Matplotlib module and call the use function. This function has to be called immediately after importing the main matplotlib module and before other matplotlib modules are imported: 12import matplotlibmatplotlib.use(&quot;Agg&quot;) notice: non-interactive backend, meaning it won’t display on the screen, only save to files. If we do not change the default backend. Python will give us NSException.","categories":[{"name":"搏浪","slug":"搏浪","permalink":"http://ihozh.com/categories/搏浪/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://ihozh.com/tags/Python/"},{"name":"Matplotlib","slug":"Matplotlib","permalink":"http://ihozh.com/tags/Matplotlib/"}]},{"title":"Matplotlib 配色方案","slug":"Matplotlib 配色方案","date":"2017-06-24T04:37:47.000Z","updated":"2017-06-27T05:53:40.000Z","comments":true,"path":"2017/06/24/Matplotlib 配色方案/","link":"","permalink":"http://ihozh.com/2017/06/24/Matplotlib 配色方案/","excerpt":"在用matplotlib做图的时候，通常需要配色。 matplotlib 自己提供了一套解决配色方案，除此之外还有一个非常小巧的python包 palettable 提供了一系列的专业配色方案。这些对于python画图来说应该是足够了。 Matplotlib 配色方案官方网址","text":"在用matplotlib做图的时候，通常需要配色。 matplotlib 自己提供了一套解决配色方案，除此之外还有一个非常小巧的python包 palettable 提供了一系列的专业配色方案。这些对于python画图来说应该是足够了。 Matplotlib 配色方案官方网址colormap 分为四种类型： Sequential：在两个色调中近似单色的变化平稳的色图。Sequential colormap 是绘制科学数据理想的配色方案，这种方案内在表现出从低到高的变化。 Diverging: 有中间色，由中间色向两段不同的颜色缓慢变化。这种配色方案适合数据有中间值的情况。 Qualitative: 离散的颜色，颜色变化较快。 Miscellaneous: 其他不属于以上三种的配色方案。 Palettable 配色方案完全基于Python的配色库，小巧，没有其他依赖。体格虽小但是能力不小，不仅是matplotlib完美的解决方案还可以为网站应用配色。 来源Palettable 收录了以下配色库中的配色。 cmocean Colorbrewer2 Cubehelix matplotlib MyCarta Tableau The Wes Anderson Palettes blog 推荐一个在线的可视化配色库colorbrewer2 安装Python2 Python3 都支持pip 1pip install palettable 寻找颜色命名规则 &lt;颜色名&gt;_&lt;颜色数量&gt;，反色加上_r。使用时需要先导入包： palettable.cmocean.divergingpalettable.cmocean.sequentialpalettable.colorbrewer.divergingpalettable.colorbrewer.qualitativepalettable.colorbrewer.sequentialpalettable.matplotlibpalettable.mycartapalettable.tableaupalettable.wesanderson 如果要使用 Dark2_7 配色方案1from palettable.colorbrewer.qualitative import Dark2_7 接口通用接口123456789101112131415name The name of the palette.type One of &apos;diverging&apos;, &apos;qualitative&apos;, or &apos;sequential&apos;.number The number of defined colors in the palette.colors The defined colors in the palette as a list of RGB tuples in the range 0-255.hex_colors Colors as a list of hex strings (e.g. &apos;#A912F4&apos;).mpl_colors Colors as a list of RGB tuples in the range 0-1 as used by matplotlib.mpl_colormap A continuous, interpolated matplotlib LinearSegmentedColormap. Palette 接口123456789101112get_mpl_colormap Use this method to get a matplotlib color map and pass custom keyword arguments to LinearSegmentedColormap.from_list.show_as_blocks Show the defined colors of the palette in the IPython Notebook. Requires ipythonblocks to be installed.show_discrete_image Show the defined colors of the palette in the IPython Notebook. Requires Matplotlib Palettes to be installed.show_continuous_image Show the continuous, interpolated palette in the IPython Notebook. Requires Matplotlib Palettes to be installed.save_discrete_image Save an image of the defined colors of palette to a file. Requires Matplotlib Palettes to be installed.save_continuous_image Save an image of the continuous, interpolated palette to a file. Requires Matplotlib Palettes to be installed. 使用方法三种常见使用方法 Color Cycle改变matplotlib的默认颜色循环。使用 .mpl_color 属性。1ax.set_color_cycle(palettable.colorbrewer.qualitative.Dark2_8.mpl_colors) Colormap给cmap传参，使用 .mpl_color 属性。：123ax.imshow(data, cmap=Blues_8.mpl_colormap) #orax.plot(data, cmap=Blues_8.mpl_colormap) Discrete Colormap.mpl_colormap属性是连续的，使用 ListedColormap 离散化。1cmap = ListedColormap(palettable.colorbrewer.qualitative.Dark2_7.mpl_colors)","categories":[{"name":"搏浪","slug":"搏浪","permalink":"http://ihozh.com/categories/搏浪/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://ihozh.com/tags/Python/"},{"name":"Matplotlib","slug":"Matplotlib","permalink":"http://ihozh.com/tags/Matplotlib/"}]},{"title":"MIT多元微积分四：三重积分和曲面积分","slug":"MIT多元微积分四：三重积分和曲面积分","date":"2017-06-24T03:37:01.000Z","updated":"2017-06-24T04:22:07.000Z","comments":true,"path":"2017/06/23/MIT多元微积分四：三重积分和曲面积分/","link":"","permalink":"http://ihozh.com/2017/06/23/MIT多元微积分四：三重积分和曲面积分/","excerpt":"","text":"","categories":[{"name":"苦境","slug":"苦境","permalink":"http://ihozh.com/categories/苦境/"}],"tags":[{"name":"微积分","slug":"微积分","permalink":"http://ihozh.com/tags/微积分/"},{"name":"公开课","slug":"公开课","permalink":"http://ihozh.com/tags/公开课/"},{"name":"18.02","slug":"18-02","permalink":"http://ihozh.com/tags/18-02/"},{"name":"工程数学","slug":"工程数学","permalink":"http://ihozh.com/tags/工程数学/"}]},{"title":"MIT多元微积分三：二重积分和线积分","slug":"MIT多元微积分三：二重积分和线积分","date":"2017-06-19T20:43:14.000Z","updated":"2017-09-08T06:43:22.000Z","comments":true,"path":"2017/06/19/MIT多元微积分三：二重积分和线积分/","link":"","permalink":"http://ihozh.com/2017/06/19/MIT多元微积分三：二重积分和线积分/","excerpt":"1. Double Integrals 二重积分回顾单变量积分，积分可以看成函数与坐标轴所围成的面积。","text":"1. Double Integrals 二重积分回顾单变量积分，积分可以看成函数与坐标轴所围成的面积。 1.1 Definition of Double Integration 二重积分定义二重积分可以理解成二元函数下围城的体积。对区域R做积分，R为积分域，dA表示的是一小块面积。 \\iint_{R} f(x,y)\\mathrm{d} A将区域R分成多个小块，对每块面积取极限 \\sum _ i f(x_i,y_i)\\cdot \\Delta A_i,\\Delta A_i \\rightarrow 0这就是二重积分的定义。 但是，对体积取极限不是计算积分的常用算法。这样来考虑阴影部分体积，用一些平行的平面扫过定义域，在每个切面上，就会出现但变量积分所表示的面积。当把所有这些面积加起来时（积分），就得到了阴影部分的体积。 定义 S(x) 为平行于yz面的切面，切面的厚度取极限为dx \\iint_{R} f(x,y)\\mathrm{d} A = \\int_{x_\\min}^{x_\\max}S(x)\\mathrm{d}x 下一步，计算每个切面的S(x)，这是一个一次积分，x是定值，指的是某一个切面。y的积分域随x变化 S(x)=\\int_{y_{\\min(x)}}^{y_{\\max(x)}} f(x,y)\\mathrm{d}y 将两个积分结合到一起，就是一个非常重要的概念，累次积分(interated integral)： \\iint_{R} f(x,y)\\mathrm{d} A = \\int_{x_\\min}^{x_\\max} \\left [\\int_{y_{\\min(x)}}^{y_{\\max(x)}} f(x,y)\\mathrm{d}y \\right ]\\mathrm{d}x计算累次积分就是分别对变量进行一次积分。 1.2 Examples of Double Integration 二重积分例子例1 计算以下函数的积分,x，y的区间都为[0,1]： z=1-x^2-y^2这是最简单的情况，x和y的取值互相独立。积分域为矩形，阴影部分体积为所求积分。注意一部分在xy平面上方，为正，一部分为在xy平面下方，为负。 \\int_{0}^{1} \\int_{0}^{1} (1-x^2-y^2) \\mathrm{d}y\\mathrm{d}x首先计算内积分： \\int_{0}^{1} (1-x^2-y^2) \\mathrm{d}y= \\left [ y^2-x^2y-\\frac{1}{3}y^3\\right ]_ 0^1= \\frac{2}{3}-x^2其次计算外积分： \\int_{0}^{1} (\\frac{2}{3}-x^2) \\mathrm{d}x= \\left [ \\frac{2}{3}x-\\frac{1}{3}x^3 \\right ]_ 0^1= \\frac{1}{3}例2计算以下函数的积分, 积分域为x,y&gt;0，并且图像大于xy平面的部分 z=1-x^2-y^2y的取值依赖于x，此时的积分域为四分之一个圆。 \\iint_{R} (1-x^2-y^2) \\mathrm{d}A= \\int_{0}^{1} \\int_{0}^{\\sqrt{1-x^2}} (1-x^2-y^2) \\mathrm{d}y\\mathrm{d}x内积分： \\int_{0}^{\\sqrt{1-x^2}} (1-x^2-y^2) \\mathrm{d}y= \\left [ y^2-x^2y-\\frac{1}{3}y^3\\right ]_ 0^{\\sqrt{1-x^2}}= \\frac{2}{3}(1-x^2)^{\\frac{2}{3}}外积分(用到三角变换，在极坐标下更好计算)： \\int_{0}^{1} \\frac{2}{3}(1-x^2)^{\\frac{2}{3}} \\mathrm{d}x= \\frac{\\pi}{8}1.3 Exchanging the Order of Integration 交换积分次序几何学上，交换积分次序是有意义的，从不同的方向对积分域做切面。 \\int_{0}^{1}\\int_{0}^{2} \\mathrm{d}y\\mathrm{d}x交换积分次序也可能会让计算变得简单。改变积分次序，要考虑取值范围。 \\int_{0}^{1}\\int_{x}^{\\sqrt{x}} \\frac{e^y}{y}\\mathrm{d}y\\mathrm{d}x积分域： \\int_{0}^{1}\\int_{y^2}^{y} \\frac{e^y}{y}\\mathrm{d}x\\mathrm{d}y内积分： \\int_{y^2}^{y} \\frac{e^y}{y}\\mathrm{d}x= \\left [ \\frac{e^y}{y}x\\right ]_ {y^2}^{y}= e^y-e^yy外积分(不定积分)： \\int_{0}^{1} (e^y-e^yy) \\mathrm{d}y= e-21.4 Double Integrals in Polar Coordinates 极坐标的二重积分考虑之前的例子： \\iint_{ \\begin{matrix} x^2+y^2\\leq 1\\\\ x,y\\geq 0 \\end{matrix} } (1-x^2-y^2) \\mathrm{d}A在直角坐标系下，算这个积分并不容易。用极坐标代替直角坐标。 极坐标下，二元函数的几何意义是相同的，即函数与定义域围成的体积。 将定义域直角坐标系的x和y分别替换成对应极坐标系的 $r$ 和 $\\theta$，同理，定义域可以细分为无数的小块，先来计算每个小区域的面积。 \\Delta A \\approx r\\Delta\\theta\\Delta r注意不是： \\neq \\Delta\\theta\\Delta r当面积足够小时； \\mathrm{d} A =r\\mathrm{d}\\theta\\mathrm{d} r再来看看被积分的函数： f(x,y)=1-x^2-y^2由于有直角坐标系和极坐标系的转换公式： \\left\\{\\begin{matrix} x=r\\cos\\theta \\\\ y=r\\sin\\theta \\end{matrix}\\right.f(r,\\theta)=1-r^2得到最后极坐标下的积分公式： \\int_{0}^{\\frac{\\pi}{2}}\\int_{0}^{1} (1-r^2)r\\mathrm{d}r\\mathrm{d}\\theta内积分： \\int_{0}^{1} r-r^3\\mathrm{d}x= \\left [ \\frac{1}{2}r^2=\\frac{1}{4}r^4\\right ]_ {0}^{1}=\\frac{1}{4}外积分： \\int_{0}^{\\frac{\\pi}{2}} \\frac{1}{4} \\mathrm{d}\\theta=\\frac{\\pi}{8}这个例子是幸运的，当从直角坐标系变换的极坐标的时候 积分区域更加简单 积分对象更加简单 但是一般来说，这种转换总会有牺牲的。 积分区域不确定，大部分情况下，首先给定角度，对r做积分 积分对象变复杂，因为引入了三角函数 1.5 Applications: Mass and Average Value 应用：质量和平均体积跳出二重积分的几何意义是求体积的观念，现在看下更广泛的应用 计算某区域的面积一说计算面积，很容易就让人联想到，这是一重积分的工作，但是二重积分也是可以算面积的。面积可以看作是对小区域 $\\mathrm{d}A$ 求和： Area(R)=\\iint_{R}1 \\cdot \\mathrm{d}A计算平面物体的质量我们都知道， 质量=密度\\times体积可以对密度做积分得到质量，但这是三重积分的工作。注意二重积分只能处理平面。 但是考虑一个平面物体，比如金属板，就可以用二重积分计算了。平面金属板的质量是板上每一小片质量的总和。一个平面物体的密度是每单位面积元的质量，因此可以对密度积分求平面物体质量。使用 $\\delta$ 表示密度 \\Delta m \\approx \\delta \\Delta A\\mathrm{Mass} = \\iint_{R} \\delta \\cdot \\mathrm{d} A在区域R上求函数f的平均值大家都知道有限数据集平均的意义，比如一个班的考试平均成绩。但是无限数据集呢？ 测量一个空间的平均温度，更高的准确度要求更多的测量点。数学上定义连续数据集合的平均值的方法是对整个数据集合的函数做积分，再除以这个集合的大小，也就是区域的面积。 \\mathrm{Average} (f)=\\overline{f}=\\frac{1}{\\mathrm{Area(R)}}\\iint_R f \\cdot\\mathrm{d}A这个平均值对各点的权重是一样的。如果是加权平均则在积分内乘以权重系数。 \\mathrm{Average} (f)=\\overline{f}=\\frac{1}{\\mathrm{Area(R)}}\\iint_R f \\delta\\cdot\\mathrm{d}A平面物体的质心在直角坐标系下，物体的质心在(x,y)的加权平均处。 \\overline{x}=\\frac{1}{\\mathrm{Mass}}\\iint x \\delta \\cdot\\mathrm{d}A\\overline{y}=\\frac{1}{\\mathrm{Mass}}\\iint y \\delta \\cdot\\mathrm{d}A1.6 Applications: Moment of Inertia 应用：转动惯量质量是使物体平动的困难程度。转动惯量用来描述刚体转动时的惯性，和质量不同，和旋转轴有关。 质点的动能： \\frac{1}{2}mv^2距离质点o的r处有一点m，角速度为w： \\frac{1}{2}mv^2=\\frac{1}{2}mr^2\\omega^2所以，转动惯量的定义为： mr^2一个大物体的转动惯量是所有小物体的转动惯量总和。 \\Delta m \\approx \\delta \\Delta A\\Delta m r^2\\approx r^2\\delta \\Delta A关于原点的转动惯量 I_o=\\iint_R (x^2+y^2)\\delta \\cdot\\mathrm{d}A转动动能=\\frac{1}{2}I_o\\omega^2如果沿着x轴转动，质点到x轴的距离为|y|，表示了沿着x轴转动的难度。 I_x=\\iint_R y^2\\delta \\cdot\\mathrm{d}A同理，我们可以求出刚体绕任意轴转动的公式，只要能够找到每个点到转轴的距离。 例子：一张正在播放的碟片，设密度均匀为1 I_o=\\iint_R r^2 r\\cdot\\mathrm{d}r\\mathrm{d}\\theta\\\\ =\\int_0^{2\\pi}\\int_0^a r^3\\cdot\\mathrm{d}r\\mathrm{d}\\theta\\\\ =\\frac{\\pi a^4}{2}这就是沿着中心点转动碟片的难度，再来看下飞盘，飞盘沿边界处一点转动 I_o=\\iint_R r^2 r\\cdot\\mathrm{d}r\\mathrm{d}\\theta\\\\ =\\int_{2\\pi}^{2\\pi}\\int_0^{2a\\cos{\\theta}} r^3\\cdot\\mathrm{d}r\\mathrm{d}\\theta\\\\ =\\frac{3}{2}\\pi a^4如果飞盘绕着边界一点旋转会比绕中心旋转难3倍。 1.7 Change of Variables 变量转化知道如何在直角坐标系中处理二重积分，也知道直角坐标系和极坐标系的互相转换，一般情况下，变量变换更加普遍。这一节讲如何在二重积分下做变量变换。 计算椭圆的面积例1： 计算一个以a，b为半轴的椭圆面积。 \\left(\\frac{x}{a}\\right)^2+\\left(\\frac{y}{b}\\right)^2=1 可以在直角坐标系下求面积，但是我们发现并不容易。椭圆是一个被压扁的的圆，直接使用极坐标也不方便。所以首先，要简化： \\frac{x}{a}=u\\frac{y}{b}=v\\iint_{\\left(\\frac{x}{a}\\right)^2+\\left(\\frac{y}{b}\\right)^2","categories":[{"name":"苦境","slug":"苦境","permalink":"http://ihozh.com/categories/苦境/"}],"tags":[{"name":"微积分","slug":"微积分","permalink":"http://ihozh.com/tags/微积分/"},{"name":"公开课","slug":"公开课","permalink":"http://ihozh.com/tags/公开课/"},{"name":"18.02","slug":"18-02","permalink":"http://ihozh.com/tags/18-02/"},{"name":"二重积分","slug":"二重积分","permalink":"http://ihozh.com/tags/二重积分/"},{"name":"线积分","slug":"线积分","permalink":"http://ihozh.com/tags/线积分/"},{"name":"工程数学","slug":"工程数学","permalink":"http://ihozh.com/tags/工程数学/"}]},{"title":"MIT多元微积分二：偏微分 笔记","slug":"MIT多元微积分二：偏微分-笔记","date":"2017-05-24T18:35:50.000Z","updated":"2017-06-19T09:53:47.000Z","comments":true,"path":"2017/05/24/MIT多元微积分二：偏微分-笔记/","link":"","permalink":"http://ihozh.com/2017/05/24/MIT多元微积分二：偏微分-笔记/","excerpt":"1. Functions of Two Variables, Tangent Approximation and Optimization1.1 Functions of Two Variables: Graphs 二元函数：图有没有试着去画一个二元函数的图，比起一元函数来，画二元函数的图简直就是灾难。 f(x,y)如何直观的表示一个二元函数的图，一个很好的列子就是等高线图：","text":"1. Functions of Two Variables, Tangent Approximation and Optimization1.1 Functions of Two Variables: Graphs 二元函数：图有没有试着去画一个二元函数的图，比起一元函数来，画二元函数的图简直就是灾难。 f(x,y)如何直观的表示一个二元函数的图，一个很好的列子就是等高线图： 1.2 Level Curves and Contour Plots 水平线和等高线图等高线图就是把一个二元函数压扁在一个平面上，平面上不同的高线实际上是不同坐标的横截面。同一条等高线上所有的值都是一个常数。例：画出这个函数的等高线图： f(x,y)=-y f(x,y)=1-(x^2+y^2)同心圆，等高线的间隔越来越小，说明越来越陡。 1.3 Partial Derivatives 偏微分根据等高线图，当固定一个变量为定值的时候，可以看出函数随着另一个变量的变化情况。偏导数(Partial) 的定义就是每次只对一个变量求导数。多元函数只有偏导数。 \\frac{\\partial }{\\partial x} f(x_0,y_0)=\\lim_{\\Delta x\\rightarrow 0} \\frac{(x_0+\\Delta x,y_0)-(x_0,y_0)}{\\Delta x}\\frac{\\partial }{\\partial y} f(x_0,y_0)=\\lim_{\\Delta y\\rightarrow 0} \\frac{(x_0,y_0+\\Delta y)-(x_0,y_0)}{\\Delta y}偏微分的几何意义：固定一个变量为常数，用对应的平面切割函数。在平面内截线随另一个变量变化。 1.4 Approximation Formula 近似公式近似方程是用来表示多变量同时变动时的方程。直观的想法就是x的变化加上y的变化。 z=f(x,y)\\Delta z \\approx f_x \\Delta x + f_y \\Delta y在多元函数的任一点上，可分别做固定x轴和y轴的切线，两个切线可以构成一个切平面。 \\frac{\\partial}{\\partial x} f(x_0,y_0)=a\\Rightarrow L_1=\\left\\{\\begin{matrix} z=z_0+a(x-x_0) & \\\\ y=y_0 \\end{matrix}\\right.\\frac{\\partial}{\\partial y} f(x_0,y_0)=b\\Rightarrow L_1=\\left\\{\\begin{matrix} z=z_0+b(y-y_0) & \\\\ x=x_0 \\end{matrix}\\right.两条直线都在切平面里，切平面的平面方程： z=z_0+a(x-x_0)+b(y-y_0)还有一种方法是：用参数方程表示两条直线，然后方向向量做叉乘，得到法向量，再用法向量得到平面方程。函数的图像和切平面非常接近。可以用这个公式来估计x和y的变化对函数值的影响。 1.5 Optimization Problems 优化问题如何找到多元函数的极大值和极小值。 在局部极小值极大值处，对各个变量的一阶偏导数都为0。 这时候会发现函数的切平面是水平的。 这个条件是必要但不充分的，有其他的偏导数为0的点但不是极值点。定义：在f上有一点为 临界点（critical point）,如果对各个变量的偏导数为0。既不是最大值也不是最小值的点，称为 鞍点。临界点可能是局部极大，局部极小或者鞍点。 1.6 Least Squares 最小二乘对于所有的测量点，找到一条直线，使得所有点到直线的y坐标的差的平方最小(惯例)。 y=ax+b最小化： D=\\sum_{i=1}^n [y_i-(ax_i+b_i)]^2\\frac{\\partial D}{\\partial a}=\\sum_{i=1}^n 2[y_i-(ax_i+b_i)](-x_i)\\frac{\\partial D}{\\partial b}=\\sum_{i=1}^n 2[y_i-(ax_i+b_i)](-1)得到2*2线性方程组 (\\sum_{i=1}^n x_i^2)a+(\\sum_{i=1}^n x_i)b=\\sum_{i=1}^n x_iy_i(\\sum_{i=1}^n x_i^2)a+nb=\\sum_{i=1}^n y_i摩尔定律的指数方程做最小二乘 y=c e^{ax}\\ln(y)=\\ln(c)+ax1.7 Second Derivative Test 二阶导数检验：边界与无穷问题是如何判断局部最大值，局部最小值，鞍点。如何找到全局最大值和最小值。通常来说，最值可能出现在临界点，边界处或无穷远处。 1.7.1 二次方程D=ax^2+bxy+cy^2如果有二次方程，可以将方程修改为平方项的形式，然后分析各项系数正负来判断。有一种情况，某一变量系数为0，称作退化（degenerate）。退化临界点有可能是极大值或极小值。在高次方程中，也有可能是退化鞍点。 D=x^3+y^3在原点处就是退化鞍点。 也可以从判别式的角度得到同样的结论。 if $4ac-b^2&lt;0$，说明 $x/y$ 有正有负，存在鞍点。 if $4ac-b^2&gt;0$，和x轴没有交点，恒正恒负，由a来判断 if $a&gt;0$，存在极小值 if $a&lt;0$，存在极大值 if $b^2-4ac=0$，不好判断，退化 下图分别为三种情况的函数图像： 1.7.2 导数检测A=\\frac{\\partial^2 f}{\\partial x^2}=f_{xx}B=\\frac{\\partial^2 f}{\\partial x \\partial y }=f_{xy}=f_{yx}C=\\frac{\\partial^2 f}{\\partial y^2}=f_{yy}对于二阶函数 A=2aB=bC=2cAC-B^2=4ac-b^2 为什么要用二阶导数进行判断？二阶导数判断是如何来的？这要从泰勒公式说起，首先看函数的一阶展开： \\Delta f\\approx f_x(x-x_0)+f_y(y-y_0)当在零界点的时候，变化为0，一阶展开是不够的，将函数进行二阶展开： \\Delta f\\approx f_x(x-x_0)+f_y(y-y_0)\\\\+ \\frac{1}{2}f_{xx}(x-x_0)^2+ f_{xy}(x-x_0)(y-y_0)+ \\frac{1}{2}f_{yy}(y-y_0)^2发现二阶项就是标准的二阶方程，我们可以用前面同样的方法进行分析，说明通过二阶导数来分析函数的极大极小值是合理的。 为什么判别式为0的时候不能判定函数形状？ 当判别式为0的时候，二阶展开也不够用了，这时就需要判断更高阶的情况。在非退化情况下，函数的形状取决于二次项。在退化情形下，函数图像取决于更高阶导数。 1.8 例子对于任意函数，如何分析？ 通过一阶导找到临界点 通过二阶导判断类别 通过A的正负判断极大极小 完善，判断边界 f(x,y)=x+y+\\frac{1}{xy}第一步： f_x=1-\\frac{1}{x^2y}=0f_y=1-\\frac{1}{xy^2}=0可得 $(x,y)=(1,1)$，这是临界点，下面要判断临界点类型 第二步： A=f_{xx}=\\frac{2}{x^3y}B=f_{xy}=\\frac{1}{x^2y^2}C=f_{yy}=\\frac{2}{xy^3}$AC-B^2&gt;0$，所以临界点(1,1)是极大值或者极小值 第三步：$A&gt;0$,(1,1)是极小值 第四步：考虑哪里是最大值，有边界处（0，0）和无穷远处，带入方程为无穷大，这时方程有最大值。 2.Chain Rule, Gradient and Directional Derivatives 链式法则，梯度和方向导数这一节会讲分析多元方程的更多方法。我们想知道多元函数各个变量的变化情况，在任意方向上如何计算多变量的变化。这一节可以帮助我们去解决这些问题。 通常所说的函数指的是显函数，表达式为y=f(x)。很多时候，并不能直接通过x去表示y，而是F(x,y)=0的形式，这就是隐函数。 在求隐函数的微分的时候，可以使用些小窍门： y=f(x)\\mathrm{d} y=f'(x) \\mathrm{d}x对于多元或者复杂的函数，有一套标准的方法可以进行分析。 首先说下单变量下的链式法则，有一个函数链$z=f(g(x))$。链式法则要回答的是链的斜率，要求整条链的导数。 \\frac{\\mathrm{d} z}{\\mathrm{d} x}= \\frac{\\mathrm{d} z}{\\mathrm{d} y} \\frac{\\mathrm{d} y}{\\mathrm{d} x}我们要求的复杂函数导数就会转化成两个已知简单函数的导数。看一个例子来直观的理解： \\sin(3x)内函数是$y=3x$，外函数是$z=\\sin(y)$。根据链式法则，得到： \\frac{\\mathrm{d} z}{\\mathrm{d} x}= 3\\cos{3x} 函数z的频率是正弦函数频率的三倍，所以变化的幅度更大，在原点处，斜率也是3倍，这和导数图像的结果完全一样。这就是链式法则的直观的表示。 2.1 Total Differentials and the Chain Rule 全微分和链式法则全微分（Total Differentials）先来给个结果，对于f(x,y,z)，全微分： \\mathrm{d} f=f_x\\mathrm{d} x+ f_y\\mathrm{d}y+ f_z\\mathrm{d}zd 就是微分符号，如何去考虑微分符号? 首先看看不能怎么去考虑： \\mathrm{d} f\\neq \\Delta f$\\Delta f$ 表示数量，而 $\\mathrm{d} f$ 是符号。微分符号可以这样认为： 反映了变量变化时对函数的影响。 是一个微小变化的占位符。 有一个曾经使用过的公式，注意这里是约等号而不是等号： \\Delta f \\approx f_x\\Delta x+ f_y\\Delta y+ f_z\\Delta z 同时除以 $\\mathrm{d}t$ 可以得到t趋近于0变化率。\\frac{\\mathrm{d} f}{\\mathrm{d} t} =f_x\\frac{\\mathrm{d} x}{\\mathrm{d} t}+ f_y\\frac{\\mathrm{d} y}{\\mathrm{d} t}+ f_z\\frac{\\mathrm{d} z}{\\mathrm{d} t} 这个就是 链式法则（chain rule）。如果函数依赖于某些变量，变量又依赖于其他变量，链式法则可以寻找出函数在新变量下的变化率以及个变量之间的依赖关系。 先来一个不太严谨的证明：如果x,y,z分别是t的函数，则有 \\mathrm{d}x=x'(t) \\mathrm{d}t, \\mathrm{d}y=y'(t) \\mathrm{d}t, \\mathrm{d}z=z'(t) \\mathrm{d}t带入后： \\mathrm{d}f=f_xx'(t)\\mathrm{d}t+ f_yy'(t)\\mathrm{d}t+ f_zz'(t)\\mathrm{d}t除以 $\\mathrm{d} t$ 就是链式法则。 更好点的证明： \\Delta f \\approx f_x\\Delta x+ f_y\\Delta y+ f_z\\Delta z\\frac{\\Delta f}{\\Delta t} \\approx \\frac{f_x\\Delta x+ f_y\\Delta y+ f_z\\Delta z}{\\Delta t}当 $\\Delta t$ 非常小的时候，就出现了0/0这种情况，这就是微积分要处理的。微积分保留了这个值，在极限条件下这个值就是导数。变化率趋近的值就是微分,约等号也就变成等号了。这就是链式法则最核心的原理。 \\frac{\\Delta f}{\\Delta t} \\rightarrow \\frac{\\mathrm d f}{\\mathrm d t}， \\frac{\\Delta x}{\\Delta t} \\rightarrow \\frac{\\mathrm d x}{\\mathrm d t}例子： w=x^2y+z,x=t,y=e^t,z=\\sin t\\frac{\\mathrm d w}{\\mathrm d t}= 2xy\\frac{\\mathrm d x}{\\mathrm d t}+ x^2\\frac{\\mathrm d y}{\\mathrm d t}+ 1 \\frac{\\mathrm d z}{\\mathrm d t}=2te^t+t^2e^t+\\cos t也可以直接将各部分值带入，可以得到同样的结果，链式法则本质上是将多变量转化为单变量。如果x,y,z不能写成t的显性函数，则只能使用链式法则。 2.2 链式法则和微分的关系一个很有意思的地方，很多人知道导数的乘法法则，确实乘法法则是链式法则的一个应用，反过来乘法法则也可以通过链式法则来证明。 f=uv,u=u(t),v=v(t)\\frac{\\mathrm d (uv)}{\\mathrm d t}= f_u\\frac{\\mathrm d u}{\\mathrm d t}+ f_v\\frac{\\mathrm d v}{\\mathrm d t}\\\\ =v\\frac{\\mathrm d u}{\\mathrm d t}+ u\\frac{\\mathrm d v}{\\mathrm d t}再来看看除法法则： g=\\frac{u}{v},u=u(t),v=v(t)\\frac{\\mathrm d g}{\\mathrm d t}= \\frac{1}{v}\\frac{\\mathrm d u}{\\mathrm d t}+ \\frac{-u}{v^2}\\frac{\\mathrm d v}{\\mathrm d t}\\\\ =\\frac{u'v-v'u}{v^2}2.3 多变量的链式法则到现在为止，感觉一切都没有问题，都是那么完美。突然有声音在问，之前的链式法则，都是认为所有变量都是关于共同变量t的，都依赖于同一个t，这本质上就是单变量的求导，如果每个变量依赖多个不同的变量，比如说一个极坐标下的方程，链式法则怎么用，函数w关于u,v的偏导数到底是什么？ w=f(x,y),x=x(u,v),y=y(u,v)可以把x和y的公式带入，w就变成了u和v的方程。但是求这个偏导数绝对会让人抓狂的。或者，将链式法则进行到底： \\mathrm d w = f_x\\mathrm d x+f_y\\mathrm d y如果改变u的话，w如何改变？x，y如何改变，这些是微分关系给我们的。 \\mathrm d w = f_x(x_u \\mathrm d u+x_v \\mathrm d v)+ f_y(y_u \\mathrm d u+y_v \\mathrm d v)\\\\ =(f_xx_u+f_yy_u)\\mathrm d u+ (f_xx_v+f_yy_v)\\mathrm d v整理下这个式子，看括号内的部分： \\frac{\\partial f}{\\partial u}= \\frac{\\partial f}{\\partial x} \\frac{\\partial x}{\\partial u}+ \\frac{\\partial f}{\\partial y} \\frac{\\partial y}{\\partial u}\\frac{\\partial f}{\\partial v}= \\frac{\\partial f}{\\partial x} \\frac{\\partial x}{\\partial v}+ \\frac{\\partial f}{\\partial y} \\frac{\\partial y}{\\partial v}理解这个式子也不难，我们想知道，u如何影响f，f是关于x和y的函数，x和y又依赖于u，这就是链式法则的精华了。有人发现分子分母上都有同样的偏微分符号，是不是可以再词约分化解，答案是不行。偏微分不能约分，偏微分不能约分，偏微分不能约分。 但是上下同时有微分符号，是可以约分的。 2.4 例子 平面直角坐标系和极坐标系换元的公式是： \\left\\{\\begin{matrix} x = r\\cos\\varphi \\\\ y = r\\sin\\varphi \\end{matrix}\\right.如果已知函数f(x,y)，想知道f关于 $r$ 或者 $\\varphi$ 的变化，就可以用链式法则试下了。 \\frac{\\partial f}{\\partial r}= \\frac{\\partial f}{\\partial x} \\frac{\\partial x}{\\partial r}+ \\frac{\\partial f}{\\partial y} \\frac{\\partial y}{\\partial r} \\\\ =f_x\\cos{\\varphi}+f_y\\sin{\\varphi}2.5 Gradient: Definition, Perpendicular to Level Curves 梯度回顾一下链式法则： \\frac{\\mathrm{d} w}{\\mathrm{d} t} =w_x\\frac{\\mathrm{d} x}{\\mathrm{d} t}+ w_y\\frac{\\mathrm{d} y}{\\mathrm{d} t}+ w_z\\frac{\\mathrm{d} z}{\\mathrm{d} t}w的变化是由x，y，z的变化引起的。x，y，z又分别以自己的速度变化，通过的偏导数的影响直接影响原函数。偏导数告诉我们w对每个变量变化有多敏感。 用一种新的写法： \\frac{\\mathrm{d} w}{\\mathrm{d} t}= \\bigtriangledown w\\cdot \\frac{\\mathrm{d}\\overrightarrow{ r}}{\\mathrm{d} t}\\bigtriangledown w=\\left \\langle w_x,w_y,w_z\\right \\rangle\\frac{\\mathrm{d}\\overrightarrow{ r}}{\\mathrm{d} t}=\\left \\langle \\frac{\\mathrm{d} x}{\\mathrm{d} t}, \\frac{\\mathrm{d} y}{\\mathrm{d} t}, \\frac{\\mathrm{d} z}{\\mathrm{d} t}\\right \\rangle这个向量包含了所有的偏导数。每个点都会有一个向量。可以称为函数w在某一点（x,y,z）处的 梯度 （gradient）。r对t的微分就是 速度向量（velocity vector）。 定理: 令w为常数，梯度向量垂直于原函数等值面。如图，画出函数的等高线，梯度向量是指向函数值更大的方向，并且垂直于等高线（投影于2维情况）。 看一种最简单的情况： w=a_1x+a_2y+a_3z\\bigtriangledown w=\\left \\langle a_1,a_2,a_3\\right \\rangle寻找这个函数的等值面，令w=c a_1x+a_2y+a_3z=c发现，等值面就是平面。由于平面的法向量是 \\overrightarrow{n}=\\left \\langle a_1,a_2,a_3\\right \\rangle这个平面的法向量就是梯度向量。 其实，对任何函数，都可以有这种线性的近似来代替函数本身。这意味着用切平面取代等值面。 再来看一个例子： w=x^2+y^2\\bigtriangledown w=\\left \\langle 2x,2y\\right \\rangle当w=c时，在等值面上有梯度向量，如图所示，垂直于等值面： 2.6 证明要理解向着等值曲线内部移动会发生什么？假设在等值曲线上有一个动点，这会令函数值保持为一个常数。通过链式法则，我们能够知道函数变化有多快。链式法则就是理解梯度向量和等值面之间的关键点。 令 $\\overrightarrow{r}=\\overrightarrow{r}(t)$ 是一条在等值面 $w=c$ 上的曲线 首先观察速度向量，这个动点的速度向量和曲线相切，和等值面相切。 \\overrightarrow{v}= \\frac{\\mathrm{d}\\overrightarrow{r}}{\\mathrm{d} t}速度向量v和平面w=c相切，根据链式法则，我们知道w是如何变化的： \\frac{\\mathrm{d} w}{\\mathrm{d} t}= \\bigtriangledown w\\cdot \\frac{\\mathrm{d}\\overrightarrow{ r}}{\\mathrm{d} t}由于一直在等值面上运动，所以梯度是0，所以 \\frac{\\mathrm{d} w}{\\mathrm{d} t}=0，w(t)=c=常数可以推出，梯度向量和速度向量垂直： \\bigtriangledown w \\perp \\overrightarrow{ v}更进一步的说，这对任何w=c上的动点，都成立。 \\bigtriangledown w \\perp 切平面如果用二维来说，会有等高线，运动方向是切向量方向，梯度垂直于切向量。 2.7 例子找到 $x^2+y^2-z^2=4$ 在点(2,1,1)的切平面。这个函数叫做双曲面（hyperpoloid），长得像这个样子： 这是 $w=x^2+y^2-z^2$ 在w=4时的等值面。梯度向量是： \\bigtriangledown w = \\left \\langle 2x,2y,-2z \\right \\rangle= \\left \\langle 4,2,-2 \\right \\rangle这是曲面或者是切平面的法向量。 曲面和切平面有相同的法向量。得到切平面的方程： 4x+2y-2z=C带入点（2，1，1），得到C=8。切平面和梯度向量如图所示： 换一个角度，使用微分来考虑： \\mathrm{d} w=2x\\mathrm{d} x+2y\\mathrm{d} y-2z\\mathrm{d} z\\Delta w \\approx 4\\Delta x+2\\Delta y-2\\Delta z4\\Delta x+2\\Delta y-2\\Delta z=04(x-2)+2(y-1)-2(z-1)=02.8 Directional Derivatives 方向导数方向导数是梯度的一个应用。方向导数是沿着某方向上的导数，例如x轴，y轴。方向导数衡量了函数沿着某方向的变化情况。 在某点（x,y)开始，有一个向量u，沿着u的方向直线移动。同时有一个二元函数w(x,y)，沿着u的方向，变化有多快？将直线的轨迹参数化： \\frac{\\mathrm{d} \\overrightarrow{r}}{\\mathrm{d} s}=\\widehat{u}这个问题实际上就是求： \\frac{\\mathrm{d} w}{\\mathrm{d} s}定义：函数w沿着u方向的方向导数，不局限于坐标轴方向： \\left.\\begin{matrix} \\frac{\\mathrm{d} w}{\\mathrm{d} s} \\end{matrix}\\right|_ {\\widehat{u}}学习偏导数的时候我们知道，偏导数是与x轴y轴平行的线做垂面所得到的截线的斜率。相似的，方向导数是沿着方向向量的垂面截取图像，得到的截线的斜率。 链式法则里，就讲解过如何去求解了。现在，可视化这个问题。沿着3D图直线方向做垂面，可以得到这个垂面的截线，截线上的某点的斜率就是方向导数： 方向导数的计算根据链式法则： \\frac{\\mathrm{d} w}{\\mathrm{d} s}= \\bigtriangledown w\\cdot \\frac{\\mathrm{d}\\overrightarrow{ r}}{\\mathrm{d} s}\\left.\\begin{matrix} \\frac{\\mathrm{d} w}{\\mathrm{d} s} \\end{matrix}\\right|_ {\\widehat{u}}= \\bigtriangledown w\\cdot \\widehat{u}比如说在i方向上的方向导数： \\left.\\begin{matrix} \\frac{\\mathrm{d} w}{\\mathrm{d} s} \\end{matrix}\\right|_ {\\widehat{i}}= \\bigtriangledown w\\cdot \\widehat{i}= \\frac{\\partial w}{\\partial x}i方向上的方向导数就是x方向的偏导数。 梯度向量和方向导数的关系已经知道 \\left.\\begin{matrix} \\frac{\\mathrm{d} w}{\\mathrm{d} s} \\end{matrix}\\right|_ {\\widehat{u}}= \\bigtriangledown w\\cdot \\widehat{u}= \\left | \\bigtriangledown w \\right |\\left | u \\right | \\cos \\theta当角度为0的时候，方向导数变化最大。所以梯度向量是在给定点处函数增加最快的向量。当角度为180的时候，方向导数是负的梯度。当角度为90的时候，运动方向与梯度向量垂直，相当于在等值面上运动，没有大小变化。此时与等值面相切。 3. Lagrange Multipliers and Constrained Differentials 拉格朗日乘数法拉格朗日乘子(Lagrange Multipliers) 3.1 Statement of Lagrange Multipliers and Example找到函数当x,y,z是不独立时f(x,y,z)的最小值或最大值，即有约束条件g(x,y,z)=c。 对于简单的约束条件，可以先把x,y,z的关系解出来，代入到原方程中。但是更加复杂的约束条件就不能这么解了。 先来看一个例子，找双曲线(hyperbola) xy=3 上离原点最近的点。等价的数学表达式是： \\min f(x,y)=x^2+y^2\\mathrm{s.t.} g(x,y):xy=3可以先画出 $x^2+y^2$ 的等高线图，不同c的高线上每一个点 (x,y) 到原点的距离的平方都是常数c值。这个例子的几何意义就是在双曲线上找到距离原点最近的点。 当最小值发生的时候，f(x,y) 的等高线和 g(x,y)=3 是相切的。 如何把这个切点解出来？如果两个等高线相切，说明它们的切线相同，法向量平行。由于梯度向量和等高线垂直，最值出现的时候，也就是在切点处，f和g的梯度向量是平行的。 当互相平行的时候，它们是成倍数关系。这个倍数就是拉格朗日乘子，用希腊字母lambda表示。 \\bigtriangledown f \\parallel \\bigtriangledown g\\bigtriangledown f = \\lambda\\cdot\\bigtriangledown g 主题无关，使用lambda符号代表拉格朗日乘子，很有可能是向拉格朗日致敬，因为都以L开头 现在要做的就是求解x,y和lambda三个未知量。 \\bigtriangledown f = \\lambda\\cdot\\bigtriangledown g \\left\\{\\begin{matrix} f_x=\\lambda\\cdot g_x\\\\ f_y=\\lambda\\cdot g_y \\end{matrix}\\right.再加上限制条件g，三个方程三个未知数，答案就得到了： \\left\\{\\begin{matrix} 2x-\\lambda y = 0 \\\\ \\lambda x -2y = 0 \\\\ xy=3\\\\ \\end{matrix}\\right.\\Rightarrow \\begin{bmatrix} 2 & -\\lambda\\\\ \\lambda &-2 \\end{bmatrix}\\cdot \\begin{bmatrix} x\\\\ y \\end{bmatrix}= \\begin{bmatrix} 0\\\\ 0 \\end{bmatrix}首先x和y都等于0并不满足限制条件，所以是一组平凡解。非平凡解要求矩阵的行列式为0。 \\begin{vmatrix} 2 & -\\lambda\\\\ \\lambda &-2 \\end{vmatrix}=0得到的值分别代入求证，找到最终解。 补充一点，拉格朗日乘法无法判断是最大值还是最小值，在三维空间中还有可能是鞍点。 3.2 Proof of Lagrange Multipliers 证明一个函数在某种限制条件下的最小点或者最大点，这时，如果在g的等值面上移动，则y的值一定是增加或者减少的。而且f的一阶导数符号不会改变。 没有限制条件g的时候，最大值或者最小值的偏导数为0。在有限制条件的时候，偏导数只有在固定的方向上才是0，即指向g的等值面的延伸方向。 有限制条件的最小值或者最大值，在任何g=c的方向上，f的变化率是0。 从方向导数角度来看：考虑任意一个与 g=c 相切的向量 \\widehat{u}都有： \\left.\\begin{matrix} \\frac{\\mathrm{d} f}{\\mathrm{d} s} \\end{matrix}\\right|_ {\\widehat{u}}=0\\bigtriangledown f \\cdot \\widehat{u}=0\\bigtriangledown f \\perp \\widehat{u}所以： \\bigtriangledown f \\perp g的等值面由于： \\bigtriangledown g \\perp g的等值面所以： \\bigtriangledown f \\parallel \\bigtriangledown g如图，红色向量为u，是P在g=c上的切线，f是平面的情况 有最大值的情况: 有最小值的情况: 再来看一个例子： \\max f(x,y)=2-x^2-2y^2\\mathrm{s.t.} g(x,y):x+y=1函数图像是这样子的： 可行解都在限制条件g(x,y)上，如图所示为等高线图: 目标优化方程f(x,y)梯度向量: 限制条件g(x,y)梯度向量: 红圈处为最优解，梯度向量互相平行。 警告：如何知道是最小值还是最大值？不能知道，而且不能用二次导来验证，只能带入值来求解。 3.3 Advanced Example 复杂例子当有时候函数或者约束条件复杂，拉格朗日法计算也很吃力，牢记拉格朗日法的本质，会化繁为简。 已知金字塔的体积，找一个表面积最小的金字塔。底面三点P1(x1,y1)，P2(x2,y2)，P1(x3,y3)，要求顶点P(x,y,h) 体积=\\frac{1}{3} 底面积\\cdot高由于高是固定的，来看下金字塔的底面，u1，u2，u3分别是到a1，a2，a3三条边的距离： 某一侧边的高是： h_1=\\sqrt{u_1^2+h^2}侧面的总面积 $f(u1,u2,u3)$： 面积=\\frac{1}{2}a_1\\sqrt{u_1^2+h^2}+ \\frac{1}{2}a_2\\sqrt{u_2^2+h^2}+ \\frac{1}{2}a_3\\sqrt{u_3^2+h^2}限制条件底面面积 $g(u1,u2,u3)$： 底面面积=\\frac{1}{2}a_1u_1+ \\frac{1}{2}a_2u_2+ \\frac{1}{2}a_3u_3使用拉格朗日乘数法方程： \\bigtriangledown f = \\lambda\\cdot\\bigtriangledown g\\left\\{\\begin{matrix} \\lambda =\\frac{u_1}{\\sqrt{u_1^2+h^2}}\\\\ \\lambda =\\frac{u_2}{\\sqrt{u_2^2+h^2}}\\\\ \\lambda =\\frac{u_3}{\\sqrt{u_3^2+h^2}} \\end{matrix}\\right.也就是 u_1=u_2=u_3顶点距离三条底边距离相等的时候，总面积最小。 3.4 Constrained Differentials 带约束条件的微分方程带约束条件的方程意味着方程有非独立变量(Non-independent variables)，即g(x,y,z)=c。 有函数 f(x,y,z)变量之间的关系为 g(x,y,z)=c从偏微分的角度来看看约束条件。已知： x^2+yz+z^3=8对方程微分： 2x\\mathrm{d}x+z\\mathrm{d}y+(y+3z^3)\\mathrm{d}z=0在(2,3,1)这一点上有： 4\\mathrm{d}x+\\mathrm{d}y+6\\mathrm{d}z=0这个方程反映了 $x，y，z$ 在 $(2,3,1)$ 这一点上发生变化的关系。它告诉我们诸如此类的一些问题，当 $x，y$ 变化时，z如何变化。在等值面上，变化量之间有什么关系。如果将z看作是 $x，y$ 的函数 $z=z(x,y)$，可以得到 $z$ 关于 $x，y$ 的全微分，全微分符号前边部分为偏微分。 \\mathrm{d}z=-\\frac{1}{6}(4\\mathrm{d}x+\\mathrm{d}y)\\frac{\\partial{z}}{\\partial{x}}=-\\frac{2}{3}\\frac{\\partial{z}}{\\partial{y}}=-\\frac{1}{6}当考虑x对z的偏微分的时候，会假定y恒定，$\\mathrm{d}y=0$；同理，y对z的偏微分会假定x恒定，$\\mathrm{d}x=0$。 好了，通常来说： g(x,y,z)=c\\mathrm{d}g=g_x\\mathrm{d}x+g_y\\mathrm{d}y+g_z\\mathrm{d}z=0现在就可以用任意两个变量表示第三个： \\mathrm{d}z=-\\frac{g_x}{g_z}\\mathrm{d}x-\\frac{g_y}{g_z}\\mathrm{d}y由于微分符号前边的系数可以把它考虑成偏微分，则有 \\frac{\\mathrm{d}z}{\\mathrm{d}x}=-\\frac{g_x}{g_z} 注意一个违反直觉的地方：负号出现了。 这就是求约束变量之间变化率的通用方法。 3.5 Clearer Notation 说明符号一个有趣的函数： f(x,y)=x+yx=uy=u+v分别求偏导数： \\frac{\\partial{f}}{\\partial{x}}=1\\frac{\\partial{f}}{\\partial{u}}=2虽然x=u，但是对f的偏导数却是不相同的。f对于x的偏微分，要求y保持恒定，f对于u的偏微分要求v保持恒定。虽然x=y，但是y和v是不相同的。所以，很重要的一点是要明确哪个变量是维持恒定的。这里使用一种说明符号，注意这里不再表示偏微分，而是表示恒定量： \\left ( \\frac{\\partial f}{\\partial x} \\right )_ y用新的表示法解决之前冲突的地方： \\left ( \\frac{\\partial f}{\\partial x} \\right )_ y \\neq \\left ( \\frac{\\partial f}{\\partial x} \\right )_ v = \\left ( \\frac{\\partial f}{\\partial u} \\right )_ v在处理关联变量的时候，这一点尤其重要。 3.5 Example 关于非独立变量的例子一个几何学的例子，三角形面积。 假设有一个三角形，变量是两条边 $a$ 和 $b$, 这两条边的夹角是$theta$。 有一个限制条件，三角形是直角三角形，$a$ 和 $b$ 分别是直角边和斜边。求三角形面积对角度的变化情况。 考虑三种情况：第一种情况： a, b 恒定，只改变角度，即没有直角三角形作为约束，$a,b,\\theta$ 是独立的： \\left ( \\frac{\\partial A}{\\partial \\theta} \\right )_ {a,b}= \\frac{1}{2}ab\\cos{\\theta} 第二种情况： 保持a恒定不变，$b$ 成为 $a$ 和 $\\theta$ 的函数。 b=\\frac{a}{\\cos{\\theta}}\\left ( \\frac{\\partial A}{\\partial \\theta} \\right )_ {a}= \\frac{1}{2}a^2\\sec^2{\\theta} 第三种情况： 保持b恒定不变，$a$ 成为 $b$ 和 $\\theta$ 的函数。 a=b\\cos{\\theta}\\left ( \\frac{\\partial A}{\\partial \\theta} \\right )_ {b}= \\frac{1}{2}b^2\\sin{\\theta}\\cos{\\theta} 存在非独立变量的时候，要消去这些非独立变量。作图的时候遇到了问题，使用独立变量问题解决。 接下来看看如何解偏微分。 \\left ( \\frac{\\partial A}{\\partial \\theta} \\right )_ {a} ?方法0： 将约束条件代入，消去因变量，再求导。 系统的方法： 方法1：微分 对目标函数进行微分。 对约束条件进行微分。 使恒定不变量微分为0，化简整理，得到答案。A=\\frac{1}{2}ab\\sin{\\theta}\\Rightarrow \\\\ dA=\\frac{1}{2}b\\sin{\\theta}\\mathrm{d}a+\\frac{1}{2}a\\sin{\\theta}\\mathrm{d}b+\\frac{1}{2}ab\\cos{\\theta}\\mathrm{d}\\thetaa=b\\cos{\\theta}\\Rightarrow \\\\ \\mathrm{d}a=\\cos{\\theta}\\mathrm{d}b-b\\sin{\\theta}\\mathrm{d}\\theta\\mathrm{d}a=0\\Rightarrow \\\\ \\left ( \\frac{\\partial A}{\\partial \\theta} \\right )_ {a}=\\frac{1}{2}ab\\sec{\\theta} 方法2：链式法则 \\left ( \\frac{\\partial A}{\\partial \\theta} \\right )_ {a} = A_{\\theta}\\left ( \\frac{\\partial{\\theta}}{\\partial{\\theta}} \\right )_ {a}+ A_{a}\\left ( \\frac{\\partial{a}}{\\partial{\\theta}} \\right )_ {a}+ A_{b}\\left ( \\frac{\\partial{b}}{\\partial{\\theta}} \\right )_ {a}第一项分数可约分，只剩下不考虑约束条件的偏微分；第二项为0；第三项需要约束条件解得偏微分的比值，得到最终结果。这是含有非独立变量的链式法则。两种方法可以加深理解。","categories":[{"name":"苦境","slug":"苦境","permalink":"http://ihozh.com/categories/苦境/"}],"tags":[{"name":"微积分","slug":"微积分","permalink":"http://ihozh.com/tags/微积分/"},{"name":"公开课","slug":"公开课","permalink":"http://ihozh.com/tags/公开课/"},{"name":"18.02","slug":"18-02","permalink":"http://ihozh.com/tags/18-02/"},{"name":"工程数学","slug":"工程数学","permalink":"http://ihozh.com/tags/工程数学/"}]},{"title":"MIT多元微积分一：向量和矩阵 笔记","slug":"MIT多元微积分一：向量和矩阵-笔记","date":"2017-05-15T20:51:16.000Z","updated":"2017-05-23T06:52:52.000Z","comments":true,"path":"2017/05/15/MIT多元微积分一：向量和矩阵-笔记/","link":"","permalink":"http://ihozh.com/2017/05/15/MIT多元微积分一：向量和矩阵-笔记/","excerpt":"1. Vectors, Determinations and Planes 向量，行列式和平面1.1 基础向量是一个既有大小又有方向的量。with both direction and magnitude/length。通过带箭头的直线将向量直观的表示出来。引入空间直角坐标系和单位向量是向量间计算的基础。 Pythagorean theory 毕达哥拉斯定理，勾股定理 计算向量的长度 $\\left | \\overrightarrow{a} \\right |$，多维向量还是通过勾股定理计算。 向量的加法 \\overrightarrow{A}+\\overrightarrow{B}=\\left \\langle a_{1}+b_{1},a_{2}+b_{2} \\right \\rangle向量是头尾加法，同一方向可以进行标量加法。","text":"1. Vectors, Determinations and Planes 向量，行列式和平面1.1 基础向量是一个既有大小又有方向的量。with both direction and magnitude/length。通过带箭头的直线将向量直观的表示出来。引入空间直角坐标系和单位向量是向量间计算的基础。 Pythagorean theory 毕达哥拉斯定理，勾股定理 计算向量的长度 $\\left | \\overrightarrow{a} \\right |$，多维向量还是通过勾股定理计算。 向量的加法 \\overrightarrow{A}+\\overrightarrow{B}=\\left \\langle a_{1}+b_{1},a_{2}+b_{2} \\right \\rangle向量是头尾加法，同一方向可以进行标量加法。 1.2 Dot Products点积两个向量相乘，结果是标量。几何意义是计算两个向量的夹角，以及在某一方向上的投影。 定义： \\overrightarrow{A}\\cdot \\overrightarrow{B}=\\sum_{a_i,b_i}=a_{1}b_{1}+a_{2}b_{2} 点积的几何意义：$\\overrightarrow{a}\\cdot \\overrightarrow{b}=\\left | a \\right |\\left | b \\right |\\cos(\\theta)$ 证明： \\overrightarrow{c}=\\overrightarrow{a}-\\overrightarrow{b}\\overrightarrow{c}\\cdot \\overrightarrow{c}=(\\overrightarrow{a}-\\overrightarrow{b})\\cdot (\\overrightarrow{a}-\\overrightarrow{b})={\\left | a \\right |}^{2}+{\\left | b \\right |}^{2}-2\\overrightarrow{a}\\cdot \\overrightarrow{b}根据余弦定理： \\overrightarrow{c}\\cdot \\overrightarrow{c}={\\left | c \\right |}^2={\\left | a \\right |}^{2}+{\\left | b \\right |}^{2}-2\\left | a \\right |\\left | b \\right |\\cos(\\theta )所以： \\overrightarrow{a}\\cdot \\overrightarrow{b}=\\left | a \\right |\\left | b \\right |\\cos(\\theta)1.3 点积的应用 计算长度和角度计算向量的角度的时候，先算出来的是cos，有趣的是cos的符号 sign&gt;0，锐角 sign&lt;0，钝角 sign=0，直角 检测正交$x+2y+3z=0$ 的点集是什么形状? 平面 \\overrightarrow{A}=\\left \\langle 1,2,3 \\right \\rangle\\overrightarrow{P}=\\left \\langle x,y,z \\right \\rangle\\overrightarrow{A}\\cdot \\overrightarrow{OP}=0\\overrightarrow{A}\\perp \\overrightarrow{OP} 向量沿一个方向的成分，单位向量 计算悬挂摆，分解力 1.4 Determinations 行列式 如何计算几个向量围成的面积?三角形的面积怎么计算？ Area=\\frac{1}{2}\\left | a \\right |\\left | b \\right |\\sin{\\theta }奇妙的是，这和底乘高的得到结果一样。再算出余弦，带入，会很麻烦。 下面的内容会非常有趣 考虑两个向量，$\\overrightarrow{a}$ 和差90度的向量 $\\overrightarrow{a’}$ Area=\\frac{1}{2}\\left | a \\right |\\left | b \\right |\\sin{\\theta }\\sin{\\theta}=\\cos{\\theta'}Area=\\frac{1}{2}\\overrightarrow{a'}\\cdot \\overrightarrow{b}\\overrightarrow{a'}=\\left \\langle -a_2,a_1 \\right \\rangle\\overrightarrow{a'}\\cdot \\overrightarrow{b}=\\left \\langle -a_2,a_1 \\right \\rangle \\cdot \\left \\langle b_1,b_2 \\right \\rangle=a_1b_2-a_2b_1=\\begin{vmatrix} a_1&a_2\\\\ b_1&b_2 \\end{vmatrix}=\\det(a,b)发现行列式代数上是余向量的点积，几何上行列式的绝对值是向量所围成的面积。Area=abs value of det. 1.5 空间行列式高维行列式计算方法，扩展：奇正偶负。正负是因为改变了空间的方向。更复杂的内容会在18.06讲解。 \\begin{vmatrix} a_1& a_2& a_3\\\\ b_1& b_2& b_3\\\\ c_1& c_2& c_3\\\\ \\end{vmatrix}=a_1 \\begin{vmatrix} b_2& b_3\\\\ c_2& c_3\\\\ \\end{vmatrix}-a_2 \\begin{vmatrix} b_1& b_3\\\\ c_1& c_3\\\\ \\end{vmatrix}+a_3 \\begin{vmatrix} b_1& b_2\\\\ c_1& c_2\\\\ \\end{vmatrix}几何学上，三维行列式就是长方体体积的加减。 1.6 Cross product 叉乘三纬空间的两个向量定义: \\overrightarrow{A}\\times \\overrightarrow{B} =\\begin{vmatrix} \\widehat{i}& \\widehat{j}& \\widehat{k}\\\\ a_1& a_2& a_3\\\\ b_1& b_2& b_3 \\end{vmatrix}叉乘的结果是个向量。 $\\left |\\overrightarrow{A}\\times \\overrightarrow{B} \\right |$ = 向量围成平行四边形的面积。 $dir(\\overrightarrow{A}\\times \\overrightarrow{B})$ 垂直于两向量所在平面 向量方向的判断的方式为右手法则 右手指向向量A的方向 手指指向向量B的方向 竖起大拇指，拇指方向为叉乘方向 例子： \\widehat{i}\\times \\widehat{j}= \\begin{vmatrix} \\widehat{i}& \\widehat{j}& \\widehat{k} \\\\ 1& 0& 0 \\\\ 0& 1& 0 \\end{vmatrix} =0\\widehat{i}-0\\widehat{j}+1\\widehat{k}关于空间体积的一些观点前面说到三维行列式的几何学意义就是体积。 Volume=base(area)\\cdot height=\\left | \\overrightarrow{B}\\times \\overrightarrow{C} \\right |(\\overrightarrow{A}\\cdot \\overrightarrow{n})\\overrightarrow{n}=\\frac{\\overrightarrow{B}\\times \\overrightarrow{C}}{\\left | \\overrightarrow{B}\\times \\overrightarrow{C} \\right |}Volume=\\overrightarrow{A}\\cdot (\\overrightarrow{B}\\times \\overrightarrow{C})=\\det(\\overrightarrow{A},\\overrightarrow{B},\\overrightarrow{C})补充$\\overrightarrow{A}\\times \\overrightarrow{B}$ 和 $\\overrightarrow{B}\\times \\overrightarrow{A}$ 由于方向的原因，是完全相反的。$\\overrightarrow{A}\\times \\overrightarrow{A}=0$ 1.7 Equations of planes 平面的方程这一节主要讲的是叉乘的应用。 如何已知三点构成的平面，和另外一个点P，如何确定点P在这个平面上。 一个方法是： \\det(\\overrightarrow{P_1P},\\overrightarrow{P_1P_2},\\overrightarrow{P_1P_3})=0带入 $P(x,y,z)$ 就得到平面的方程。 另一个方法：如果P在平面上则可以推出 \\overrightarrow{P_1P}\\perp \\overrightarrow{n}$\\overrightarrow{n}$ 是平面法向量（normal vector）。最后得到了一个我们很熟悉的公式，也是计算体积的公式： \\overrightarrow{P_1P}\\cdot (\\overrightarrow{P_1P_2} \\times \\overrightarrow{P_1P_3})=0这个形式在向量计算中有个别名，叫做三重积（Triple product），和行列式是一回事。 2. Matrices and Systems of Equations 矩阵和系统方程 为什么要使用矩阵，使用矩阵的动机是什么 在生活中，我们接触的很多东西都是线性的，或者需要简化成线性的。多个等式的联立得到的就是矩阵了。联立方程就是矩阵乘法。 2.1 Matrix Multiplication 矩阵乘法 举个熟悉的鸡兔同笼的问题. 鸡和兔共有 $a$只，共有脚 $b$ 个，用矩阵去表达这个问题。 假设有鸡$x$只，兔$y$只 \\left\\{\\begin{matrix} x+y=a\\\\ 2x+4y=b \\end{matrix}\\right.用矩阵乘法表示： \\begin{bmatrix} 1& 1\\\\ 2& 4 \\end{bmatrix} \\begin{bmatrix} x\\\\ y \\end{bmatrix}= \\begin{bmatrix} a\\\\ b \\end{bmatrix}通用的数学符号表达方式为： A\\cdot X=U在矩阵和向量中的每一个值都叫做元素（entries）在计算矩阵乘法 $A\\cdot B$ 时，每个元素都可以通过A矩阵的行和B矩阵的列做点乘得到。A矩阵的宽度必须要等于B矩阵的高度。 AB的乘积代表先做变换B再做变换A。我们习惯从左往右，但是矩阵计算是从右往左。直观的解释就是如果有两个连续的方程 $f(g(x))$ ，先要计算 $g(x)$, 再做 $f(x)$。 矩阵的结合律（associativity） (AB)X=A(BX)补充 AB \\neq BAIdentity matrix 单位矩阵 IX=X单位矩阵即对角全为一的矩阵。是一种“可有可无”的矩阵，单位矩阵的变换叫做恒等变换。 在平面上，做90度逆时针旋转的变换 R=\\begin{bmatrix} 0& -1\\\\ 1& 0 \\end{bmatrix}R\\hat{i}= \\begin{bmatrix} 0& -1\\\\ 1& 0 \\end{bmatrix} \\begin{bmatrix} 1\\\\ 0 \\end{bmatrix}= \\begin{bmatrix} 0\\\\ 1 \\end{bmatrix}=\\hat{j}R\\hat{j}= \\begin{bmatrix} 0& -1\\\\ 1& 0 \\end{bmatrix} \\begin{bmatrix} 0\\\\ 1 \\end{bmatrix}= \\begin{bmatrix} -1\\\\ 0 \\end{bmatrix}=-\\hat{i}(x,y)\\rightarrow (-y,x)变换矩阵的每一列说明了对要变换的对象进行什么操作。R的第一列就是对第一个基向量做R变换的结果，第二列是对第二个基向量做R变换后的结果。 最有意思的是，通过矩阵计算大大简化了需要用公式计算的计算量，如果考虑连续做两次90度逆时针变换： R^2=\\begin{bmatrix} -1& 0\\\\ 0& -1 \\end{bmatrix}=-I(x,y)\\rightarrow (-x,-y)R^4=\\begin{bmatrix} 1& 0\\\\ 0& 1 \\end{bmatrix}=I2.2 Matrix Inverses 逆矩阵如果定义A的逆矩阵为M，则有 AM=IMA=IM=A^{-1}这里A需要是 $n\\times n$的方阵，如果不是方阵的情况不在这里讨论。 对线性系统 $AX=B$ 的解可以使用逆矩阵。等式两边同时乘A的逆矩阵 X=A^{-1}B公式（适合小矩阵） A^{-1}=\\frac{1}{det(A)}adj(A)adj（adjoint）是 伴随矩阵 步骤（3*3矩阵) A=\\begin{bmatrix} 2& 2& 2\\\\ 2& 4& 5\\\\ 1& 1& 2 \\end{bmatrix}1.首先要做的是，是找一个叫 余子式（minors） 的东西。 余子式是去除了一些元素的行列式。要找到A矩阵一行一列的余子式，去掉这个元素所在的行和列，计算剩余部分的行列式，即 \\begin{vmatrix} X& X& X\\\\ X& 4& 5\\\\ X& 1& 2 \\end{vmatrix}= \\begin{vmatrix} 4& 5\\\\ 1& 2 \\end{vmatrix}=3得到矩阵A的余子式： \\begin{pmatrix} 3& -1& -2\\\\ 3& 1& -1\\\\ 3& 4& 2 \\end{pmatrix}2.找到另外一个矩阵，叫做 代数余子式（cofactors)代数余子式就是给余子式加上符号。根据棋盘图所示，+表示保留余子式值，-表示反转余子式的值。顺便一提，棋盘法可以同样用来做叉乘的符号判定。 得到代数余子式： \\begin{pmatrix} 3& 1& -2\\\\ -3& 1& 1\\\\ 3& -4& 2 \\end{pmatrix}3.转置（transpose），得到伴随矩阵行列互换 \\begin{pmatrix} 3& -3& 3\\\\ 1& 1& -4\\\\ -2& 1& 2 \\end{pmatrix}=adj(A)4.除以行列式 A^{-1}=\\frac{1}{3}\\begin{pmatrix} 3& -3& 3\\\\ 1& 1& -4\\\\ -2& 1& 2 \\end{pmatrix}2.3 Equations of planes 平面的方程再探之前学习点积的时候就知道如何去检测正交或者垂直。平面的公式是： ax+by+cz=d 第一种情况，平面过原点，知道法向量 $\\overrightarrow{N}=\\left \\langle 1,5,10 \\right \\rangle$ , 对于在平面上的点 $P(x,y,z)$ , 有： \\overrightarrow{OP}\\cdot \\overrightarrow{N}=0x+5y+10z=0第二种情况，同样的法向量，平面过 $P0(2,1,-1)$ \\overrightarrow{P_0P}\\cdot \\overrightarrow{N}=0x+5y+10z=-3总结下两种情况下的特点： 不同情况等式右边常数项不同 常数项是平面的平移距离的一个表示 等式左边的系数刚好和法向量对应 一个有意思的事情是，这里又和叉乘联系起来了。平面方程的系数就是法向量，如何得到法向量呢？叉乘。 点乘，平面，叉乘就这么在一起了。 举个例子： 向量 $\\overrightarrow{v}=\\left \\langle 1,2,-1 \\right \\rangle$ 和平面方程 $x+y+3z=5$ 是什么关系？ 快速确定平面方程的法向量，发现和已知向量不成比例，但是点积为0，说明向量垂直于法向量，所以和平面是平行的。如果把平面移到原点，如果向量和平面平行，向量的末端就在被移动到原点的平面上。 2.4 Linear Systems and Planes 线性系统和平面线性方程组的几何意义。线性方程组，对于三纬空间来说（3*3线性方程组），方程组的每一个方程决定一个平面。解方程组的本质就是找平面的交点。一般会有这三种情况：三条交线交于一点：有唯一解 X=A^{-1}B 平面交线平行：没有解，条件矛盾，无法同时满足 平面交线重叠：有无数解，条件不足 讨论下平面方程关于常数项d，d的数值并不是平移的距离，常数项除以法向量的长度才是平面到原点的距离。 将这个问题回归到从代数上，矩阵不一定能够求逆是因为行列式有可能为0（矩阵的求逆公式）。所以，矩阵的行列式不为0，矩阵可求逆，方程组有解。 行列式不为0是三个平面有唯一交点的情况，行列式为0是交线平行的情况。 2.5 Solutions to Square Systems 方阵系统的解这一节从另一个角度去认识行列式为0，为什么方程会没有解。 有一种方程组叫做 齐次方程组(homogeneous systems), 特点是常数项全部为0。方程组各项次数整齐，在数乘运算下不变。 AX=0齐次方程总是存在一个平凡解(trivial solution)，即原点。几何学表示三个平面都过原点。 第一种情况，A的行列式不为0 AX=0\\Leftrightarrow X=A^{-1}0=0原点是唯一解。 第二种情况，A的行列式为0我们知道A中的项是方程组的系数，而方程组的系数又是平面的法向量。行列式为0，说明三个平面的法向量的行列式为0: \\det(\\overrightarrow{N_1},\\overrightarrow{N_2},\\overrightarrow{N_3})=0这就意味着三个法向量共面（coplanar）（参考上一章）。用这三个法向量围成了一个不占任何体积的平行六面体。 证明有无穷多解：存在一条垂直于三个法向量所在平面且过原点的直线，平行于三个平面，而且现在面上，所以存在无穷多解。 如何求出这些解：对法向量做叉乘，这就是方程的非平凡解（nontrivial solution） 如果是一般情况，系统不再是齐次方程。 AX=Bif $\\det(A) \\neq 0$ AX=B\\Leftrightarrow X=A^{-1}Bif $\\det(A) = 0$ 无解或无穷多解 3. Parametric Equations for Curves 直线和曲线的参数方程3.1 Equations of Lines 直线的方程直线，可以用两个平面的交集表示，但这种方法并不高效率。更好的办法是 把直线当作运动点的轨迹。轨迹就是 参数方程。 例：确定经过点 $Q0=(-1,2,2)$ 和 $Q1=(1,3,-1)$ 的直线。定义Q(t)是一个移动点，在t=0时刻，在Q0点。在直线上做匀速运动，在单位时间内，到达点Q1。直线的方程问题就转化为当时刻为t的时候，点Q(t)在什么位置？ \\overrightarrow{Q_0Q(t)}=t\\overrightarrow{Q_0Q_1}分别以x(t),y(t),z(t)表示Q(t)的坐标，可以得到直线的参数方程： \\left\\{\\begin{matrix} x(t)=-1+2t\\\\ y(t)=2+t\\\\ z(t)=2-3t \\end{matrix}\\right.等价于： Q(t)=Q_0+t\\overrightarrow{Q_0Q_1}常数项（-1，2，2）是t0时刻的位置，一次项（2，1，-3）就是向量P0P1，告诉了点应该移动的方向。 3.2 Intersection of a Line and a Plane 直线和平面的相交得到了直线的参数方程，再来一个平面 $x+2y+4z=7$，平面和直线是否相交，交点在哪里。如何判断点相对于平面的位置。将点的坐标带入平面方程，可判断点相对平面的位置。带入参数方程，可以求出交点。带入方程实际上是运动轨迹和平面法向量做点积。 如果t的系数为0，说明运动轨迹平行于平面。等式成立说明轨迹在平面上。 3.3 General Parametric Equations: the Cycloid 参数方程组:摆线除直线外，更普遍的是点的任意运动，如何用参数方程表示，以摆线为例子。摆线：半径为a的轮子，沿着x轴方向滚动，轮子边缘上的一点产生的轨迹。 参数有很多种选择，这里使用角度代替时间参数t，这样可以使结果更加简单。 \\overrightarrow{OP}=\\overrightarrow{OT}+\\overrightarrow{TC}+\\overrightarrow{CP}\\overrightarrow{OT}=\\left \\langle r\\theta,0 \\right \\rangle\\overrightarrow{TC}=\\left \\langle 0,r \\right \\rangle\\overrightarrow{CP}=\\left \\langle -r\\sin{\\theta},-r\\cos{\\theta} \\right \\rangle得到P的参数方程为： \\overrightarrow{OP}=\\left \\langle r\\theta-r\\sin{\\theta},r-r\\cos{\\theta} \\right \\rangle3.4 Point (Cusp) on Cycloid 摆线的顶点仔细思考，摆线在接近底面的时候到底是什么样子？ 想要知道原点处到底发生了什么，就要自己的研究参数方程了，首先要做的就是近似。大家都知道的是，当角度足够小的时候， \\sin{\\theta}\\sim 0\\cos{\\theta}\\sim 1但是将这个近似代入原参数方程中，并不能提供好的结果，我们需要更加准确的近似：泰勒展开。 定理：设 n 是一个正整数。如果定义在一个包含 a 的区间上的函数 f 在 a 点处 n+1 次可导，那么对于这个区间上的任意 x，都有： f(x)=f(a)+\\frac{f'(a)}{1!}(x-a)+\\frac{f^{(2)}(a)}{2!}(x-a)^2+...+\\frac{f^{(n)}(a)}{n!}(x-a)^n+R_n(x)其中的多项式称为函数在$a$处的泰勒展开式，剩余的 R_n(x) 是泰勒公式的余项，是 $(x−a)^n$ 的高阶无穷小。 得到三角函数的三阶泰勒展开： \\sin(\\theta)\\approx\\theta-\\frac{1}{6}\\theta^3\\cos(\\theta)\\approx 1-\\frac{1}{2}\\theta^2当半径为1，这时候的参数方程变成： \\overrightarrow{OP}=\\left \\langle \\frac{1}{6}\\theta^3,\\frac{1}{2}\\theta^2 \\right \\rangle在原点处的斜率，当角度足够小时： \\frac{y}{x}=\\frac{3}{\\theta}\\rightarrow \\infty说明摆线在原点处有一个垂直的切线，选项是d。 3.5 Velocity and Acceleration 速度和加速度不用泰勒展开，换一个思路来研究点的运动，还是摆线，看看摆线的速度和加速度 \\overrightarrow{OP}=\\left \\langle r\\theta-r\\sin{\\theta},r-r\\cos{\\theta} \\right \\rangle位置向量 可以表示任意时刻的点的坐标，角度和时间成正比，半径为1，以单位速度运动的摆线： \\overrightarrow{r}=\\left \\langle t-\\sin{t},1-\\cos{t} \\right \\rangle速度向量（Velocity vector）： \\overrightarrow{v}=\\frac{\\mathrm{d} \\overrightarrow{r}}{\\mathrm{d} t}= \\left \\langle \\frac{\\mathrm{d} x}{\\mathrm{d} t},\\frac{\\mathrm{d} y}{\\mathrm{d} t} \\right \\rangle= \\left \\langle 1-\\cos{t},\\sin{t}\\right \\rangle在t=0时刻时，速度为0。速率（speed）： \\left | \\overrightarrow{v} \\right |=\\sqrt{v_x^2+v_y^2}= \\sqrt{2-2\\cos{t}}当$t=\\pi$时，瞬时速率最大，这是点的运动速度是轮子速度的两倍。加速度（Acceleration）： \\overrightarrow{a}=\\frac{\\mathrm{d} \\overrightarrow{v}}{\\mathrm{d} t}= \\left \\langle \\sin{t},\\cos{t}\\right \\rangle在 t=0 时刻时， \\overrightarrow{a}= \\left \\langle 0,1\\right \\rangle说明摆线在原点处只有垂直于x轴的向上加速度。 3.6 Velocity and Arc Length 速度和弧长单位切向量（unit tangent vector）： 用来表示轨迹运动的方向。 \\widehat{T}=\\frac{\\overrightarrow{v}}{\\left | v \\right |}弧长（arc length）： 点运动沿着轨迹的长度。 \\left | \\frac{\\mathrm{d} s}{\\mathrm{d} t} \\right |= \\mathrm{speed/速率}= \\left | \\overrightarrow{v}\\right |求摆线的弧长，需要对速率进行积分 \\int_{0}^{2\\pi}\\sqrt{2-2\\sin{t}} \\mathrm{d}t发现，这个积分不太容易算。怎么用向量的思想解决问题呢？重新来看速度向量，我们把它分解下 \\overrightarrow{v}=\\frac{\\mathrm{d} \\overrightarrow{r}}{\\mathrm{d} t}= \\frac{\\mathrm{d} \\overrightarrow{r}}{\\mathrm{d} s} \\frac{\\mathrm{d} s}{\\mathrm{d} t}= \\widehat{T}\\frac{\\mathrm{d} s}{\\mathrm{d} t}发现第一部分近似于切向量，第二部分是速率，为什么可以把第一部分近似为切向量，如图所示：由于移动的距离s是位置向量的模，在单位时间段足够小时，就可以近似的认为两者的比例为单位切向量： \\frac{\\mathrm{d} \\overrightarrow{r}}{\\mathrm{d} s} \\approx \\widehat{T}现在新的速度方程也是又有大小，又有方向，而且聪明的使用了切向量的概念。 3.7 例子：Kepler’s Second Law 开普勒第二定律这个例子说明为什么用向量的方法去分析运动是很好的方法。 普勒第二定律：1.每个行星的运动都保持在一个平面内。2.在相等时间内，太阳和运动着的行星的连线所扫过的面积都是相等的。 面积= \\frac{1}{2}\\left | \\overrightarrow{r}\\times\\Delta\\overrightarrow{r}\\right |= \\frac{1}{2}\\left | \\overrightarrow{r}\\times\\overrightarrow{v}\\right |\\Delta t根据开普勒第二定律，叉乘的模是常数，向量叉乘的方向是常数。也就是： \\overrightarrow{r}\\times\\overrightarrow{v}=constant\\frac{\\mathrm{d} }{\\mathrm{d} t}(\\overrightarrow{r}\\times\\overrightarrow{v})=0\\frac{\\mathrm{d} \\overrightarrow{r}}{\\mathrm{d} t}\\times \\overrightarrow{v}+\\overrightarrow{r}\\times\\frac{\\mathrm{d} \\overrightarrow{v}}{\\mathrm{d} t}=0\\overrightarrow{v}\\times \\overrightarrow{v}+\\overrightarrow{r}\\times\\overrightarrow{a}=0\\overrightarrow{r}\\times\\overrightarrow{a}=0\\overrightarrow{r}\\parallel\\overrightarrow{a}加速度是和位矢平行的。由于加速度由万有引力引起的，这个力是永远指向施力物体的，也就是太阳。现在发现，在向量的观念里，开普勒第二定律和牛顿万有引力定律有着异曲同工的妙处。","categories":[{"name":"苦境","slug":"苦境","permalink":"http://ihozh.com/categories/苦境/"}],"tags":[{"name":"微积分","slug":"微积分","permalink":"http://ihozh.com/tags/微积分/"},{"name":"公开课","slug":"公开课","permalink":"http://ihozh.com/tags/公开课/"},{"name":"18.02","slug":"18-02","permalink":"http://ihozh.com/tags/18-02/"}]},{"title":"埃拉托色尼筛选法巧解质数问题","slug":"埃拉托色尼筛选法巧解质数问题","date":"2017-05-11T05:32:09.000Z","updated":"2017-05-12T03:35:12.000Z","comments":true,"path":"2017/05/11/埃拉托色尼筛选法巧解质数问题/","link":"","permalink":"http://ihozh.com/2017/05/11/埃拉托色尼筛选法巧解质数问题/","excerpt":"质数问题很有趣，也是常见的程序员面试问题，例如，找出N以内的所有质数。 这个问题本身不难，直觉可以使用排除法。例如，从2到N，每个数判断是否有1和它本身以外的其他因数。当然，聪明一点，会发现我们根本不需要遍历N以内的所有数来判断N是否为质数，最多实验N的平方根以内数就足够。因为，N有因数的话，那么至少有一半的因数不会超过N的开平方。要判断100是不是质数，100 = 2*50 = 4*25 = 5*20 = 10*10，只要判断10以内有无100的因数即可。使用这种方法的时间复杂度为 $O(n*sqrt(n))$。","text":"质数问题很有趣，也是常见的程序员面试问题，例如，找出N以内的所有质数。 这个问题本身不难，直觉可以使用排除法。例如，从2到N，每个数判断是否有1和它本身以外的其他因数。当然，聪明一点，会发现我们根本不需要遍历N以内的所有数来判断N是否为质数，最多实验N的平方根以内数就足够。因为，N有因数的话，那么至少有一半的因数不会超过N的开平方。要判断100是不是质数，100 = 2*50 = 4*25 = 5*20 = 10*10，只要判断10以内有无100的因数即可。使用这种方法的时间复杂度为 $O(n*sqrt(n))$。 有没有更快速的算法呢？当然是有的——埃拉托色尼筛选法。 埃拉托色尼筛选法埃拉托色尼筛选法（Sieve of Eratosthenes）简称埃氏筛法，由古希腊数学家埃拉托色尼提出，核心思想非常简单，先看动图感受一下： 首先将1排除，找到n以内所有质数方法： 创建从2到n的连续整数列表，(2,3,4,…,n)； 初始化p=2，这是最小的质数； 枚举所有p的倍数，除p外都标记为非质数，(2p,3p,4p,…)； 找到下一个没有标记大于p的数。如果没有，结束运算；如果有，将该值赋予p，重复步骤3; 运算结束后，剩下所有未标记的数都是找到的质数。 这个算法的核心思想是：任何一个p值都是质数，如果存在一个合数，那么就应该存在一个质数都够标记它。算法的时间复杂度为O(n loglog n)。 进一步简化的优化算法： 对于步骤3，可以不用从2p开始排除，而是直接从p^2开始。理由已经在开始讲过，所有的小于p^2的合数都因为有更小的因数而被排除。 对于步骤4，当p^2大于n的时候停止计算。 另一个优化思路：只初始化奇数列表，这种方法可以被概括为轮分解(Wheel factorization)，是一种效率更高的寻找质数的办法。 算法实现这里推荐python匿名函数的写法，和埃氏筛法一样简洁明了： 123import mathdef getPrime(n): return filter(lambda x: not [x%i for i in range(2, int(math.sqrt(x))+1) if x%i == 0], range(2,n+1))","categories":[{"name":"兰山","slug":"兰山","permalink":"http://ihozh.com/categories/兰山/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://ihozh.com/tags/Python/"},{"name":"算法","slug":"算法","permalink":"http://ihozh.com/tags/算法/"}]},{"title":"Mac 命令行一键隐藏屏幕","slug":"Mac通过命令行解决一键隐藏屏幕和回复","date":"2017-05-08T02:16:49.000Z","updated":"2017-05-08T04:01:21.000Z","comments":true,"path":"2017/05/07/Mac通过命令行解决一键隐藏屏幕和回复/","link":"","permalink":"http://ihozh.com/2017/05/07/Mac通过命令行解决一键隐藏屏幕和回复/","excerpt":"一键清屏这个功能非常好用，但是发现mac没有直接提供清屏的功能，有一些软件能够实现这个功能，但是实在没有必要。通过两行简单的命令行命令就可以实现。 新建’hideDesk.command’文件，command和sh文件都可以，command后缀直接执行。将下边代码粘贴在文件内：","text":"一键清屏这个功能非常好用，但是发现mac没有直接提供清屏的功能，有一些软件能够实现这个功能，但是实在没有必要。通过两行简单的命令行命令就可以实现。 新建’hideDesk.command’文件，command和sh文件都可以，command后缀直接执行。将下边代码粘贴在文件内： 12345678#!/bin/shlet deskVis=$(defaults read com.apple.finder CreateDesktop -bool)if [ \"$deskVis\" = \"1\" ]; then defaults write com.apple.finder CreateDesktop -bool false;killall Finder;say icons hiddenelse defaults write com.apple.finder CreateDesktop -bool true;killall Finder;say icons visiblefi 可以直接看到效果。如果不想要声音提示，可以删去say这一段。","categories":[{"name":"兰山","slug":"兰山","permalink":"http://ihozh.com/categories/兰山/"}],"tags":[{"name":"Mac","slug":"Mac","permalink":"http://ihozh.com/tags/Mac/"},{"name":"小程序","slug":"小程序","permalink":"http://ihozh.com/tags/小程序/"},{"name":"shell","slug":"shell","permalink":"http://ihozh.com/tags/shell/"}]},{"title":"Nginx + uWSGI 部署Django站点","slug":"Nginx+uwsgi部署Django站点","date":"2017-05-04T07:10:29.000Z","updated":"2017-05-07T12:14:22.000Z","comments":true,"path":"2017/05/04/Nginx+uwsgi部署Django站点/","link":"","permalink":"http://ihozh.com/2017/05/04/Nginx+uwsgi部署Django站点/","excerpt":"Django有Apache和Nginx两种常见部署方式 主要工具： 一台远程服务器 Nginx uWSGI Django","text":"Django有Apache和Nginx两种常见部署方式 主要工具： 一台远程服务器 Nginx uWSGI Django 知识点： 站点结构 Nginx结构 debug方式 主机使用的是DigitalOcean家的基础版ubuntu，版本16.01。 从裸机开始的环境准备基础环境zsh，oh-my-zsh，vimrc从github上pull过来，一切都是熟悉的感觉。apt-get 要更新。 Python3/pip 和 虚拟环境主要是为了环境简洁和适应版本 Nginx 安装远程服务器这个是第一步的，没有服务器，开发调试都是头疼的事情。Nginx是一款反向代理服务器，可以让网站的内容呈现给客户。 123456789101112# installsudo apt-get install nginx# basic operationsudo /etc/init.d/nginx startsudo /etc/init.d/nginx stopsudo /etc/init.d/nginx restartor:sudo service nginx startsudo service nginx stopsudo service nginx restart 启动后访问服务器ip，会看到Welcome to nginx!信息。 uWSGI 安装uWSGI是实现了WSGI的服务器。WSGI一个Web接口。提供规范化协议，提高服务器的工作效率。uWSGI本身已经可以胜任服务器的工作，为什么要再前面挡一个Nginx，这是出于更好的安全性，更有效率的工作和Nginx作为专业的服务器的优势。可以详见这个讨论。 123#installapt-get install python-devsudo pip install uwsgi --upgrade 用wWSGI挂起一个最简单的程序，创建一个文件命名test.py 12345# test.pydef application(env, start_response): start_response('200 OK', [('Content-Type','text/html')]) #return [\"Hello World\"] # python2 return [b\"Hello World\"] # python3 用wWSGI挂起： 1uwsgi --http :8000 --wsgi-file test.py 这条命令是说，使用http协议，8000端口，加载指定文件。文件很简单，收到GET请求后，返回Hello World，在浏览器输入ip:8000就可以看到结果了。 安装Django12345678910111213141516#installpip install django#create projectdjango-admin.py startproject project-name#create apppython manage.py startapp app-name#同步数据库python manage.py makemigrationspython manage.py migrate#开发服务器python manage.py runserver #localhostpython manage.py runserver 0.0.0.0:8000 #ip:8000端口 理解Nginx服务器的结构 最重要的文件:一开始就要加载默认下，Nginx会安装在/usr/local/nginx，所有的配置文件在/etc/nginx下，最主要的配置文件是 /etc/nginx/nginx.conf，这个文件建议放在git上，或者进行周期性备份 1cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.$(date \"+%b_%d_%Y_%H.%M.%S\") nginx.conf 的结构如下： 1234567891011user www-data;worker_processes auto;pid /run/nginx.pid;events &#123; worker_connections 768;&#125;http &#123; ......&#125; nginx.conf 配置了主要的工作功能，include允许从后面的地址中找到配置文件，这样可以让主配置文件看起来更加精简，但是多层套用include也不推荐，让代码不易读。从默认的配置文件可以看出，/etc/nginx/conf.d/里所有的配置文件和/etc/nginx/sites-enalbed/里的配置文件都会在一开始被加载。log文件在/var/log/nginx/下。 HTTP模块：全局配置HTTP 模块会处理所有来自于网络的HTTP请求，这是Nginx的大门。重点说下/etc/nginx/sites-enalbed/这个目录，它可以让不同的虚拟域名分开来。一般都是通过软连接将配置文件连接进这个目录，很容易修改，ngnix提供了一个配置模版： 1cp /etc/nginx/sites-available/default /etc/nginx/sites-available/example.com Server模块：虚拟域名的配置在/etc/nginx/sites-enalbed/下配置的格式： 12345678910server &#123; listen 80 root /usr/share/nginx/html; server_name localhost; location / &#123; &#125;&#125; server 模块是用户修改量最大的地方。对于每一个虚拟域名都可以有不同的配置文件。/usr/share/nginx/html这个路径现在已经是Nginx默认存放静态文件的路径了，不需要再配置。 listen: 用来监听端口server_name: 自己网站的域名 是否可以使用不有效的域名呢？完全可以，在局域网中，是一个很好的办法。 log: log文件，HTTP模块已经设置过，在server模块里可以更细致。 12access_log logs/example.access.log;access_log /srv/www/example.com/logs/access.log; 建议使用完全路径，相对路径是与现在的路径下部分匹配的，不好控制。 location:文件系统配置location设置可以让服务器去应答一些要服务器资源的请求。例如： 123# http://example.com/blog/location /blog/ &#123; &#125; 注意字符串的匹配是最佳匹配，Nginx会选择匹配的最好的location。更复杂的匹配情况请参照官方文件。 部署一个Nginx的最小Web结构实践是检验真理的唯一标准，这里部署一个Nginx的最小结构，看看Nginx能不能正常工作。 linux 新建用户名用于部署Nginx并赋予权限. 123visudo# 添加权限：username ALL=(ALL) ALL 将nginx.conf用户名修改为当前用户。在当前用户的根目录下创建如下结构： 123456mysite: - mysite.conf - www - media -test.png - log 最简单的目标就是通过ip访问网站里的静态内容。简单的配置下，注意使用绝对路径： 12345678910111213141516server &#123; listen 8000; server_name mysite.com charset utf_8; access_log /home/username/mysite/log/access.log; error_log /home/username/mysite/log/error_log; location /media/ &#123; alias /home/username/mysite/media/; &#125;&#125;# 命令行软连接到Nginxsudo ln -s /home/username/mysite/mysite.conf /etc/nginx/sites-enabled/ 重启Nginx后，在 http://mysite.com/media/test.png能够看到正常显示内容就说名Nginx正常工作了。log文件显示正常。 常见的错误403 forbidden这里就要注意下用户名了，很多时候登录一台主机用户是root，而Nginx用户不是root，所以忽略了用户名的部署多会遇到这个问题。 可以将Nginx的用户名改为root，这样风险会很大。 网站静态内容部署在当前用户目录下，如列子所示。 在/usr/share/nginx/html下部署静态文件或软连接到网站目录。 404 notfound一般出现这个问题是目录的配置出现问题，使用绝对路径可解决 调试方法最好的办法就是log文件了，每次的请求，错误记录都会非常详细。 理解Django部署结构 每个环节都要理解到现在为止，已经可以分别用Nginx和uWSGI挂起服务器了。说明这两个部分都是通的： 用uWSGI挂起Django： 1uwsgi --http :8000 --module mysite.wsgi 这里sWSGI会找到 mysite下的wsgi的配置文件，即mysite/wsgi.py如果看到Django的“it worked！”信息，则说明Django被成功挂起。 通过socket连接Nginx和uWSGIsocket中文翻译为套接字，它的作用就像一个连接器，比方说把两段水管连接起来，每段管子都有自己不同的编号，下面就来试验下套接字的作用。带socket的Nginx配置多了这个部分： 1234upstream django &#123; # server unit:///path/to/yourmysite/mysite.sock; server 127.0.0.1:8022; #for a webport socket&#125; 这是要说明监听来自8022端口的请求，8022口做什么了呢？ 1uwsgi --socket :8022 --wsgi-file test.py 8022挂起了最先的python测试文件，如果有GET请求，则返回hello world。Nginx则设置为监听8023端口。通过socket，有检测到8023口的外部请求，则交给8022端口去处理，这就是socket的作用，非常灵活。也说明了这一套结构都通了： Django sockect1234upstream django &#123; server unit:///path/to/yourmysite/mysite.sock; # server 127.0.0.1:8022; #for a webport socket&#125; 重启Nginx，挂起uWSGI： 1uwsgi --socket mysite.sock --wsgi-file test.py 在当前项目下可以看到生成了空的文件mysite.sock，2023口测试通过。 最后拉起整个Django项目： 1uwsgi --socket mysite.sock --module mysite.wsgi 看到Django工作界面，完成，Done！ 常见错误connect() to unix:mysite.sock failed (2: No such file or directory)基本是路径设置问题，upstrem和socket都要使用绝对路径。 connect() to uunix:mysite.sock failed (13: Permission denied)添加socket权限： 1uwsgi --socket mysite.sock --wsgi-file test.py --chmod-socket=664 # (more sensible) 参考资料：Django Document django官方最权威的参考文档Setting up Django and your web server with uWSGI and nginx uWSGI提供的参考文档，有些小问题How To Serve Django Applications with uWSGI and Nginx on Ubuntu 16.04 DigitalOcean提供的部署指导How to Configure nginx 如何配置Nginx","categories":[{"name":"搏浪","slug":"搏浪","permalink":"http://ihozh.com/categories/搏浪/"}],"tags":[{"name":"Nginx","slug":"Nginx","permalink":"http://ihozh.com/tags/Nginx/"},{"name":"uWSGI","slug":"uWSGI","permalink":"http://ihozh.com/tags/uWSGI/"},{"name":"Django","slug":"Django","permalink":"http://ihozh.com/tags/Django/"}]},{"title":"学生可享受的优惠汇总-持续更新","slug":"学生可享受的优惠汇总-持续更新","date":"2017-05-03T08:39:39.000Z","updated":"2017-05-03T09:45:36.000Z","comments":true,"path":"2017/05/03/学生可享受的优惠汇总-持续更新/","link":"","permalink":"http://ihozh.com/2017/05/03/学生可享受的优惠汇总-持续更新/","excerpt":"撸羊毛要从学生抓起 2017年5月3日 更新 (技术类) github 学生开发包Student Developer Pack, 申请链接 实践才是硬道理，码农也要赢在起跑线上","text":"撸羊毛要从学生抓起 2017年5月3日 更新 (技术类) github 学生开发包Student Developer Pack, 申请链接 实践才是硬道理，码农也要赢在起跑线上 包括： ATOM：免费使用震撼的ATOM编辑器 AWS：亚马逊免费云技术学习，最高$110额度奖励 Bitnami：开源web服务商，一年免费 CART：数据分析平台，2年免费使用升级服务 CrowdFlower：数据服务公司，可使用他家数据平台 DataDog：他家专做系统监控，专业账户，免费2年使用 DigitalOcean：云服务提供商，$50额度奖励 Flatrion School：编程培训界的哈佛商业学院，价值$149的一月会员 GitHub：版本控制代码托管，无限制的私有仓库功能 GitKraken：高逼格Git客户端，1年专业账户 HackHands：在线代码帮助中心，7*24小时，$25额度奖励 Microsoft Imagine：包括Azure，VisualStudio一票工具，免费 Namecheap：域名提供商，一年SSL证书，一年.me域名。 SendGrid：邮件服务商，每月15K免费电子邮件 Stripe：在线移动支付工具，首1000刀免除手续费 Taplytics：动态A/B测试，免费6个月 Thinkful：在线编程学习，一个月免费学习 Transiffex：位置信息平台，一年免费Starter Plan Travis CI：持续集成，可private build Udacity：硅谷在线计算机学习，一个月免费学习任何时候课程 UnrealEngine：游戏引擎，免费使用","categories":[{"name":"兰山","slug":"兰山","permalink":"http://ihozh.com/categories/兰山/"}],"tags":[{"name":"生活","slug":"生活","permalink":"http://ihozh.com/tags/生活/"}]},{"title":"搭建经济的个人站点","slug":"搭建经济的个人站点","date":"2017-05-03T06:44:32.000Z","updated":"2017-05-04T20:53:44.000Z","comments":true,"path":"2017/05/03/搭建经济的个人站点/","link":"","permalink":"http://ihozh.com/2017/05/03/搭建经济的个人站点/","excerpt":"昨天看到阿里云给共享虚拟主机做广告，免费一年的虚拟主机加上安全服务一共六元，心里一动就拿下尝尝鲜。兴致勃勃地打开控制台，第一次体验阿里云的产品，看看究竟是何方圣神。 阿里云的虚拟主机权限很低，稍感失望。只能通过FTP上传文件和网站。而且要要绑定域名，备案后才能正常访问。这个6元的共享主机用来部署个人博客，文件系统都是非常不错的。这里特别说下，阿里云给学生提供特别的优惠，学生用户可以注册货真价实的ECS服务器，一个月不到10元，打了一折不到。","text":"昨天看到阿里云给共享虚拟主机做广告，免费一年的虚拟主机加上安全服务一共六元，心里一动就拿下尝尝鲜。兴致勃勃地打开控制台，第一次体验阿里云的产品，看看究竟是何方圣神。 阿里云的虚拟主机权限很低，稍感失望。只能通过FTP上传文件和网站。而且要要绑定域名，备案后才能正常访问。这个6元的共享主机用来部署个人博客，文件系统都是非常不错的。这里特别说下，阿里云给学生提供特别的优惠，学生用户可以注册货真价实的ECS服务器，一个月不到10元，打了一折不到。 6元用到阿里云的服务也是值的，但是如果一定要找免费的空间的话，也不是没有。一个是在github page可搭建hexo的博客，还有一个就是000webhost（也就是三蛋网）的免费空间。github page搭建稍微麻烦，三蛋网却提供一键傻瓜式搭建个人站点。1分钟就可登录自己wordpress博客了。发现三蛋会给新的博客添加自己的评论，不知这种算不算是防不胜防的广告，天底下没有免费的午餐嘛。还有个缺点，三蛋说是提供FTP，但是我换了多个工具都没有和服务器连接成功，倒是他家自带的网页传输一直好用。 又想有一台服务器，可以随便折腾，又不想备案，那么境外的云服务商就是最好的选择。vultr，digitalocean，Linode算是差不多的三家，一个月5刀的服务器差距不大，vultr最低到2.5刀。而且这三家都是注册就送，买一送一，也就是说充10刀送十刀。按时间收费的服务器对于我这种小农来说真是福音。一年的费用就是一顿饭钱，非常爽啊。现在自己在digitalocean部署了django网站，非常顺利，到国内的延迟也稳定在200ms。顺便提下三家的控制台，digitalocean最简单，除了基本信息和监控好像就没啥了，就是简洁。vultr，linode就专业的多，功能也多，还有通过手机app监控控制服务器的功能。 为啥没提AWS和Azure，计时收费花花的开着服务器就是开着烧钱机啊。虽然aws给每个账号第一年有免费的ec2提供，国内访问也是一大问题。但是AWS的云服务真的是目前用过最好的了，控制台就是行业的标杆。 最后提供资源链接： 000webhost 免费空间DigitalOcean 通过连接可获得$10奖励Linode 通过连接可获得$10奖励","categories":[{"name":"搏浪","slug":"搏浪","permalink":"http://ihozh.com/categories/搏浪/"}],"tags":[{"name":"Web","slug":"Web","permalink":"http://ihozh.com/tags/Web/"},{"name":"服务器","slug":"服务器","permalink":"http://ihozh.com/tags/服务器/"}]},{"title":"SSL初探","slug":"SSL初探","date":"2017-04-30T07:03:55.000Z","updated":"2017-05-03T19:39:21.000Z","comments":true,"path":"2017/04/30/SSL初探/","link":"","permalink":"http://ihozh.com/2017/04/30/SSL初探/","excerpt":"最近需要了解一些关于SSL的知识，绘制一张思维导图，看起来轻松多了。SSL(Secure Sockets Layer 安全套接层)，是https的主战场。曾经的http用户和服务器之间是明文传播，安全性可想而知了。https 也就是http over SSL，服务器和用户之间传送的信息是加密过的。","text":"最近需要了解一些关于SSL的知识，绘制一张思维导图，看起来轻松多了。SSL(Secure Sockets Layer 安全套接层)，是https的主战场。曾经的http用户和服务器之间是明文传播，安全性可想而知了。https 也就是http over SSL，服务器和用户之间传送的信息是加密过的。对于一个商业性的网站来说，SSL是必须的，颁发SSL的机构不少，从昂贵到免费，应有尽有。当然鼎鼎大名的就要数领头羊Symantec了。SSL证书的选择也要根据自己网站的规模，没有最好，只有更好。SSL也不能保证网络的绝对安全。WoSign 和 StartCom 已经被苹果和多家主流浏览器商封杀，而被当时他们喷击的免费SSL机构let’s encrypt却走向了主流。","categories":[{"name":"搏浪","slug":"搏浪","permalink":"http://ihozh.com/categories/搏浪/"}],"tags":[{"name":"Web","slug":"Web","permalink":"http://ihozh.com/tags/Web/"}]},{"title":"eclipse搭建scala语言的spark环境","slug":"eclipse搭建scala语言的spark环境","date":"2016-04-17T04:24:00.000Z","updated":"2017-05-01T06:58:48.000Z","comments":true,"path":"2016/04/17/eclipse搭建scala语言的spark环境/","link":"","permalink":"http://ihozh.com/2016/04/17/eclipse搭建scala语言的spark环境/","excerpt":"在eclipse上搭建使用Scala IDE 和 Maven 的 Spark 项目。","text":"在eclipse上搭建使用Scala IDE 和 Maven 的 Spark 项目。系统：OS X EI Capitan 10.11.4Eclipse: Mars.2要确定eclipse为Java环境 (JDK6,JDK7 or JDK8) 安装scala IDE plugin最简单的方法直接在scala官网下载IDE，scala IDE 如果在现有的eclipse上加入scala插件，在这里找到最新的插件版本 eclipse-&gt;Help-&gt;Install New Software在work with栏里输入路径： 1http://download.scala-ide.org/sdk/lithium/e44/scala211/stable/site 选择全部安装 安装完成后会自动弹出或者通过菜单栏进入scala-&gt;Run Setup Diagnostics，勾选Use recommended default settings 并将 eclipse.ini中heap size 设置为1280M（-Xmx1280M）。如果不设置会出现outof memory 的报错。 这时已经可以运行scala的项目了。如果要运行spark项目还需要maven进行项目管理。 安装scala maven管理插件,不必须默认的maven插件是不包括m2eclipse-scala的，若果没有，在eclipse-&gt;Help-&gt;Install New Software下输入： 1http://alchim31.free.fr/m2e-scala/update-site/ 安装全部 建立maven项目新建maven项目，在pom中配置： 12345678910&lt;dependency&gt; &lt;groupId&gt;org.apache.spark&lt;/groupId&gt; &lt;artifactId&gt;spark-core_2.10&lt;/artifactId&gt; &lt;version&gt;1.5.2&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt; &lt;artifactId&gt;hadoop-client&lt;/artifactId&gt; &lt;version&gt;2.6.0&lt;/version&gt; &lt;/dependency&gt; 注意由于要在EMR上运行程序，所以版本号选择与EMR上版本号一致。 右键项目-&gt;configure，选择引入scala环境，这时会看到编译错误右键项目-&gt;properties-&gt;Scala Compiler-&gt;Use Project Settings-&gt;Fixe Scala Installation:2.10.6 这时scala语言的spark全部搭建完成，在src下新建scala对象便可以写自己的程序了。这时可以把java改为scala了。 视频资料：https://www.youtube.com/watch?v=aB4-RD_MMf0","categories":[{"name":"搏浪","slug":"搏浪","permalink":"http://ihozh.com/categories/搏浪/"}],"tags":[{"name":"spark","slug":"spark","permalink":"http://ihozh.com/tags/spark/"},{"name":"scala","slug":"scala","permalink":"http://ihozh.com/tags/scala/"}]},{"title":"方寸间的壮美河山（1）下","slug":"《一盒品邮》方寸间的壮美河山（1）下","date":"2016-04-15T22:53:52.000Z","updated":"2016-04-16T03:08:52.000Z","comments":true,"path":"2016/04/15/《一盒品邮》方寸间的壮美河山（1）下/","link":"","permalink":"http://ihozh.com/2016/04/15/《一盒品邮》方寸间的壮美河山（1）下/","excerpt":"","text":"作者： 一盒微信： zyh_1991 1997-16 黄山继特57《黄山风光》发行34年后，1997年10月中国邮政又发行了《黄山》特种邮票，志号为1997-16。这套邮票一共八枚，由版画名家诗松龄先生设计，版别为套票小版张。套票小版张是","categories":[{"name":"一盒品邮","slug":"一盒品邮","permalink":"http://ihozh.com/categories/一盒品邮/"}],"tags":[{"name":"一盒品邮","slug":"一盒品邮","permalink":"http://ihozh.com/tags/一盒品邮/"}]},{"title":"《一盒品邮》方寸间的壮美河山（1）上","slug":"《一盒品邮》方寸间的壮美河山（1）","date":"2016-04-07T07:41:58.000Z","updated":"2016-04-16T04:25:05.000Z","comments":true,"path":"2016/04/07/《一盒品邮》方寸间的壮美河山（1）/","link":"","permalink":"http://ihozh.com/2016/04/07/《一盒品邮》方寸间的壮美河山（1）/","excerpt":"作者: 一盒微信: zyh_1991自古神仙清修境，今有三山睥睨之。 在新中国的邮票中，自然山川的主题无疑是一道最亮丽的风景。即使是在方寸中，仍然不失原景，要么大气磅礴，要么温婉灵动的神韵，再加以设计师的独特写意，使这些邮票至今散发着无尽的韵味。 笔者在学生时代就已经将名山系列基本收集齐全。该系列除了部分主题入手难度较大，整体非常适合初级的集邮爱好者。","text":"作者: 一盒微信: zyh_1991自古神仙清修境，今有三山睥睨之。 在新中国的邮票中，自然山川的主题无疑是一道最亮丽的风景。即使是在方寸中，仍然不失原景，要么大气磅礴，要么温婉灵动的神韵，再加以设计师的独特写意，使这些邮票至今散发着无尽的韵味。 笔者在学生时代就已经将名山系列基本收集齐全。该系列除了部分主题入手难度较大，整体非常适合初级的集邮爱好者。 中国名山首推五岳，但在邮票世界，五岳的成就却远逊于三山，所以方寸之间当属三山。三山五岳是个成语，出于清人曹寅的《舟中望惠山举酒调培山》：“三山五岳渺何许？云烟汗漫空竛竮。”一句。其实已经泛指中国名山。但是还是有人愿意将其一一指定，就像五湖四海，也有好事之人一定要说出是哪五个湖，哪四片海。强迫症患者看来是古来就有了。而至现代，也不妨旅游景区给自己加一个噱头。 中国有着很深厚的名山文化，这个文化是受到道教的影响。但凡烟波飘渺，云雾缭绕之处，便让人产生对“神”和“仙”的向往。在《史记卷二十八封禅书》和《史记秦始皇本纪中》都有过记载，“海中有三神山,名曰蓬莱、方丈、瀛洲”，山上有神仙居住，金屋银瓦，长生不老药。这是古时三山原型。那时五岳已经有所名气，五岳的方位也是相对中原而言。随着后来文化南迁, 可能是古人惊羡于南方山水之美，所以在南方又选了三座山代替了传说中的三座神山，也就逐渐形成了现在三山的的概念。 黄山黄山位于安徽省黄山市，明人徐霞客曾赞道：“登黄山，天下无山，观止矣”，后来便演化成耳熟能详的“五岳归来不看山，黄山归来不看岳”一说。首先介绍的这套邮票在名山系列中，不论设计还是价值，都是前无古人后无来者，她是名山系列邮票的标杆之作，也是新中国邮票的标杆之作，我没有任何理由不先从她开始讲起。 特57 黄山风景 比黄山更美的邮票特57黄山风景发行于1963年，由邮票设计泰斗－孙传哲设计。全套邮票16枚，选取了黄山16处绝胜景致。黄山邮票之绝一绝在于取景。孙老师在1962中国摄影学会举办的《黄山风景摄影展览》中，精选出16帧照片作为蓝本进行二次创作，集合百家之长。以最简之笔法，凝炼出黄山之精髓。山川再美，只不过数笔之间，此乃二绝。全套邮票使用影雕套印技术，得益于60年北京邮票厂的建立，先进技术的使用，雕刻处尽显苍遒，影写出峰峦隐绰，此乃三绝。有此三绝，才有人评论：“比黄山实景更美！”。面对实景，已经无法用语言形容，描述邮票，更绝词穷。笔者也只用一些诗句或是聊聊数语做简介，而将欣赏的权利完全交给读者。4分： 玉屏峰：因峰壁如玉雕屏障，清人汪土宏有诗赞曰：“玉屏峙霄汉，鸟道度松门。” 峰顶建有文殊院，人文景观丰富，徐霞客誉为“黄山绝胜处”。 迎客松：位于玉屏峰左侧，奇松乃黄山四绝之一，有“迎客”、“陪客”、“送客”三大名松。 前景松树雕刻细腻，背景简洁明亮。 后海松石：奇松怪石，皆为四绝。“百道飞泉鸣玉佩，千寻石柱架琼峦。”，由远及近，层次鲜明，中间所绘，似航海观音。 清凉台： 为观黄山绝景云海的最佳处。玉屏楼观南海，清凉台望北海，排云亭看西海，白鹅岭赏东海，螯鱼峰眺天海。 8分：天都远眺： 天都峰与莲花峰、光明顶并称为黄山三大主峰。乾隆御题“天都九百仞，巍然切太虚”。 天都以奇险闻名，古诗有赞：“任它五岳归来客，一见天都也叫奇”。邮票让人不由自主从近及远，远眺天都峰，明人罗洪先应该也是由于此景，发出“何年白日骑鸾鹤，踏碎天都峰上云”之感慨。 剪刀峰：“欲借剪刀峰下景，好裁一半与平分”， 票中景色取自黄昏，阳面如熊熊烈火，使人望而生畏。 万松林：李白诗句“昨夜谁为吴会吟，风生万壑振空林”应是由此景而发。群峦之间，松林摇曳，诗与画融为一体。 梦笔生花：仙人的一支笔斗，画尽黄山绝胜。笔锋的遗墨，化作一棵苍松。正如清人项黻所赞：“天然一管生花笔，写遍奇峰入画图。” 10分：莲花峰：黄山最高峰，李白赞曰“黄山四千仞，三十二莲峰。丹崔夹石柱，菡萏金芙蓉”。票面如雨后般清新，云雾缭绕，正是“真好造化”，“非人间也”。 西海云潮：西海奇秀，由四周山峰围成巨大空间，如入画境，奇哉幻哉。 黄山古松：描绘始信峰古松。始信峰，指古人到了这里才开始相信，黄山之奇。有言道：“不到始信峰，不知黄山松” 东海观潮：描绘黄山云海日出，蕴红色调。 海到尽头天是岸，山登绝顶我为峰。 20分：石笋峰：黄山的石笋与雁荡的龙湫、匡庐的瀑布并称天下三奇。此处应有仙人下棋等景点，可邮票中并不明显。 22分：石猴观海：一巧石，静观潮起潮落。坐看人间兴废事，几经沧海变桑田。 30分：狮子林：清晨薄暮，熟睡的雄狮还未醒来，轻轻的，请不要吵醒它。 50分：蓬莱三岛：每到云海弥漫，三座山峰山尖微露，犹如海上仙岛。 设计者孙传哲一生情系黄山，在去世后留下未完成遗作《黄山图》，遗书中也要求将骨灰撒在黄山。 黄山风景凭借出色的设计，荣获建国三十周年最佳邮票奖。其价格在2013年也一度创下1万5000元记录。现在市场价依然在1万元附近，足见其珍贵。全套票以30分狮子林和50分蓬莱仙岛为精票，因其发行量稀少为100万枚。 集邮爱好者可以像笔者一样，即使入手盖销或者信销，仍然会满足感十足。 1997-16 黄山继特57《黄山风光》发行34年后，1997年10月中国邮政又发行了《黄山》特种邮票，志号为1997-16。这套邮票一共八枚，由版画名家诗松龄先生设计，连印成套票小版张。套票小版张是指将整套邮票在一版上呈现出来。由于特57占尽天时地利，在邮市的口碑高居不下，这套小版张在还未发行时就一直被人瞩目，能否在设计上超越前者一直是热门话题。这也是我国第一套套票小版。同一题材的二次发行还有一个原因就是给99年的世界集邮展览筹款，所以我们可以注意到这八枚邮票的面值都为200分，高于当时的平信邮资80分。","categories":[{"name":"一盒品邮","slug":"一盒品邮","permalink":"http://ihozh.com/categories/一盒品邮/"}],"tags":[{"name":"一盒品邮","slug":"一盒品邮","permalink":"http://ihozh.com/tags/一盒品邮/"}]},{"title":"hexo安装第三方插件","slug":"hexo安装第三方插件","date":"2016-04-06T02:34:39.000Z","updated":"2016-04-06T04:13:11.000Z","comments":true,"path":"2016/04/05/hexo安装第三方插件/","link":"","permalink":"http://ihozh.com/2016/04/05/hexo安装第三方插件/","excerpt":"hexo 支持丰富的第三方插件，可以满足用户大部分的需求。 统计分析百度统计百度统计是一款免费的站点分析工具，可以统计站点的访问量，用户行为等。","text":"hexo 支持丰富的第三方插件，可以满足用户大部分的需求。 统计分析百度统计百度统计是一款免费的站点分析工具，可以统计站点的访问量，用户行为等。1.登陆百度统计，需要注册。2.选择百度统计-网站统计。3.在网站中心选择新增网站，输入自己的网站域名。4.在代码获取页面，复制 hm.js? 后面统计脚本id，如图红线部分 5.进入站点配置文件，主题下的_config.yml 新加入 1baidu_analytics: &lt;复制的内容&gt; 6.发布hexo g -d7.在百度站点下，选择首页代码状态，如果显示代码安装正确就Ok啦 LeanCloudleanCloud是一款在线统计工具，可以统计每篇文章的阅读数量，已被hexo/next集成。1.登陆leancloud,注册。2.创建新应用。3.在储存目录下，新建一个名为Counter的class4.在设置目录下，选择’Key’,可以找到App ID和App Key5.进入站点配置文件，主题下的_config.yml 新加入 1234leancloud_visitors:enable: trueapp_id: &lt;your_app_id&gt;app_key: &lt;your_app_key&gt; 6.发布hexo g -d7.现在可以在储存-&gt;Counter下查看点击统计了。","categories":[{"name":"杂货铺","slug":"杂货铺","permalink":"http://ihozh.com/categories/杂货铺/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://ihozh.com/tags/hexo/"}]},{"title":"《一盒品邮》邮票上的中国古代名画－清明上河图","slug":"一盒品邮邮票上的中国古代名画－清明上河图","date":"2016-04-01T15:41:15.000Z","updated":"2016-04-01T20:55:54.000Z","comments":true,"path":"2016/04/01/一盒品邮邮票上的中国古代名画－清明上河图/","link":"","permalink":"http://ihozh.com/2016/04/01/一盒品邮邮票上的中国古代名画－清明上河图/","excerpt":"作者：一盒虹桥影落繁华尽，梦回汴京认归帆。 2013，我去台湾交换。心泽找我，说想入门下邮票的收藏和投资。我是一个业余的集邮爱好者。之前还从来不知道台湾票长什么样。正好逮到这个机会，因为一直玩老票，稳扎稳打，没怎么栽过跟头，再加上认票的直觉，也就答应着去帮他做一笔。那时我们校区在桃园，邮市最好最大的当然是台北的牯岭街。去邮市，要赶个大早，先坐校车到桃园火车站，再搭最近一班的捷运叮叮哐哐的晃向台北。这样一条路竟然让我现在无比怀念。","text":"作者：一盒虹桥影落繁华尽，梦回汴京认归帆。 2013，我去台湾交换。心泽找我，说想入门下邮票的收藏和投资。我是一个业余的集邮爱好者。之前还从来不知道台湾票长什么样。正好逮到这个机会，因为一直玩老票，稳扎稳打，没怎么栽过跟头，再加上认票的直觉，也就答应着去帮他做一笔。那时我们校区在桃园，邮市最好最大的当然是台北的牯岭街。去邮市，要赶个大早，先坐校车到桃园火车站，再搭最近一班的捷运叮叮哐哐的晃向台北。这样一条路竟然让我现在无比怀念。 单独把清明上河图拿出来写一篇文章，一个是因为两岸都曾以清明上河图为主题发行过邮票，但是因为不同的背景而际遇大相径庭。另一个就是我想尝试在黄沙之中，挑挑拣拣，将一些被利益的淤泥埋没的真金洗捡出来。让更多的人能认识这些珍品。讲了这么多废话，先上图一睹为快吧下图是台湾1968年专53 清明上河图(第一组7枚)低面值5张联票高面值2张该套邮票设计原型是清院本清明上河图，现存于台北故宫博物院中。可能有些朋友不知道，原来清明上河图也有这么多的版本。清明上河图是北宋流行的一种绘画题材，其中以张择端所绘最为出名，受到历代喜爱。所以仿本各朝都有出现。清院本的清明上河图是在清乾隆元年，由陈枚、孙祜、金昆、戴洪、程志道五位宫廷画家合作而成。他们集合各家所长，又将明清时期特有的娱乐表演，踏青等风俗加入，画面内容更加丰富，成为自张后最为出名一幅。这个时期的明清画，正是我想强调的，由于受到西洋画风影响，色彩明亮，物做细腻严谨。这种风格与现代的邮票设计擦却微妙的火花。以大陆邮票而言，仅凭笔者个人喜爱程度，新中国邮票设计的巅峰时期出现在老纪特后期，经历文革，编号，到新JT的74-82时期。这三十年的邮票设计极为精美，这段时期的邮票也被广大集邮爱好者喜爱，市场价就足以说明一切问题。68年正处于大陆文革票的后期，由于文革时期本身特殊的政治意义，邮票设计特点鲜明，我们抛开不谈。回过头再看看台湾发行的清明上河图，其设计与配色非常接近大陆老纪特后期的邮票风格。色彩鲜而不艳，画面丰而不繁，配色总给人那种恰到好处的感觉。在六七是年代，印刷技术配色的局限反而给我们最舒服的视觉享受。反而在现代发达的印刷术下，大块使用对比鲜明的靓丽色块，再加上计算机辅助的图形设计，使得邮票总是缺乏那么些美感，欠了几分灵动的火候。68年发行的这套邮票，是台湾第一套连票形式印刷的古画邮票，票种为影写版印刷。其中五张连票面值均为1元，画面取原作的连续一部分，金明池春景。这一部分是张本中没有的，第一二枚主要景色是宝津楼，临水殿，骆驼虹和水心殿，“天阔云高，溪横水远，晚日寒生轻晕“，气势磅礴。后三枚逐渐将景色过度到热闹的街市。还有两张则选择了画面中最为经典的两个场景，城门（面值5元）和虹桥（面值8元）。 下图是台湾1969年专58 清明上河图(第二组5枚)清院本清明上河图画中人物超过4000人，反应很多明清时期的社会风俗。所以在69年，台局又发行了清明上河图第二组邮票。这五张邮票是原画中的五个局部特写。其中两枚为连票面值均为1元，取景迎亲图，还有迁居（面值2.5元），画廊（面值5元）和露店（面值8元）.每一枚邮票都可以看见栩栩如生的原画人物。还可以看到当时人们使用的穿着，使用的工具，居住条件等。由此我们可以推测出当时的社会风气非常开放，康乾盛事可见一斑。 2004年大陆发行特种邮票 2004-26T《清明上河图》（9枚 套票连印）此邮票原本为张择端本清明上河图,图案取景为其全景，此本现藏于北京故宫博物馆中。前七枚80分，第八枚1元，第九枚2元。胶雕套印，印刷技术细腻程度为现代邮票罕有。所以在短短几年，身价暴涨十倍一度到百元之上。后来中国邮政又在2010世博会推出5米长的丝绢邮票，与原作等比例制作，是目前世界上最大的邮票。当然这个对我来说过于奢华，我甚至没有机会亲眼目睹。现代科技对邮票的印制工艺发挥的淋漓尽致，邮票品种甚至五花八门，再加上新票人为炒作严重，我自己不敢轻易介入。有时候也只能从朋友口中感受下那种潮起潮落的激迫之感。就从艺术价值而言，两套清明上河图都是佳品，各有所长。尤其台湾版笔者推为珍品，下表做些对比给读者直观的感受。 版本 发型年 版别 枚数 发行量 价格(中邮)¥ 台湾 1968 影写 12 45万 650 大陆 2004 胶雕 9 1080万 90 2013年，台版清明上河图是我推荐的邮票之一，当时的价钱在200人民币上下。作为学生资金有限，也不敢搏命。即使现在，这个价位在笔者看来仍然偏低。各位集邮爱好者如有兴趣，现在入手不失为合适时机。 笔者注：在网上所查资料中，包括百度百科在内，很多资料将两幅清明上河图混为一谈，实属不该。对于清明踏青扫墓的习俗民间相传始于朱元璋时期。其实早在唐朝，扫墓开始流行，唐玄宗下令“寒食上墓”，那时的扫墓是在寒食。至于踏青一说，应该只存在于清院本中。资料整理：清明上河图张择端本高清图： 点击这里清明上河图清院本高清图：点击这里","categories":[{"name":"一盒品邮","slug":"一盒品邮","permalink":"http://ihozh.com/categories/一盒品邮/"}],"tags":[{"name":"一盒品邮","slug":"一盒品邮","permalink":"http://ihozh.com/tags/一盒品邮/"}]},{"title":"CC的学习经验","slug":"CC学习的经验","date":"2016-03-19T01:20:46.000Z","updated":"2017-05-01T06:59:10.000Z","comments":true,"path":"2016/03/18/CC学习的经验/","link":"","permalink":"http://ihozh.com/2016/03/18/CC学习的经验/","excerpt":"CC的半学期学习总结","text":"CC的半学期学习总结感谢王达师兄，让我在学习他的同时感觉到点滴进步。学期过了一半，Cloud Computing 的project也已过半。20号凌晨5点，随着强一致和终端一致的两个测试的通过，意味着可以享受一下周末的惬意了。白天的时间去冲了下奖励，拿到两分后也是黔驴技穷，还是腾出点时间写写总结，分享分享学习经验。通常自己一个星期挣扎出的作业，见识过第一天就能荣登榜首的神牛。也不用提在第二周作业就被EMR活活逼哭的黑历史。说是分享，也请各位大神高抬贵手。我是如何学习这门课的，有什么感悟。这里不会过多去纠结课程本身内容，而是分享下我自身的学习经历。 实验指导是否理解透彻实验指导是指在每次做项目前，官方发布的说明文档。它包括 项目简介 知识点讲解 平台要求 任务步骤和目标 惩罚，奖励，提示 对指导的理解程度会极大的影响每次作业的速度和质量。刚开学时，每次CC的作业在读完指导后就直接开始，这样虽然可以很快的进入工作，有两个缺点。 写程序bug百出 完成后很快忘记 如果bug如果不是代码的生疏，便是自己没有理解。 做一项最愚蠢的工作开始试着重新排版指导说明，对重点部分进行加粗和注释，通过这种方法，加强对指导的梳理和理解。问题来了，这样每次的作业都有一多半的时间在处理这项任务。这是一项很蠢的工作，直到突然看到师兄在博客中翻译上课内容，才恍然一笑，原来还有一样蠢的人。但是师兄，很快！后来的实验开始，我尝试着去翻译这些指导。刚开始极其痛苦，汉语翻译是要比英文注释还要慢的一项工作，有几周差点没有完成作业。但坚信的是，学习方法是比内容更重要的，既然你觉得是对的，那就做下去。 你会越来越快翻译的工作实际上是，在理解原文的情况下做出总结，这是一个双倍的学习工程。翻译的难点在于： 准确把握原文 翻译通顺 专业词汇的使用 奇迹也会来的很突然。在翻译工作进行了一个月左右的时候，可以很明显感觉到翻译速度的提升，伴随对指导的理解深入，作业会完成的越来越顺利。以这一周为例，个人项目花费两天时间翻译理解指导，复习涉及到的知识和自己查找的一些资料，笔记字数1万字左右。作业程序花费1天通过了12个测试的11个，半天时间冲奖励和补漏。 深入理解是一种技能深入理解是翻译这项愚蠢工作的副产品，也是主要目的。举个例子来说，在最近的一次作业，要求实现一个终端一致的服务器，只有一个要求：（原文）with only one requirement- the newly received write operation must have a greater timestamp than the write operation that updated the currently stored value. 就这一个要求挡住了不少同学满分的道路。这里我理解的至关重要的一个词就是write而不是new。只有在连续写请求的条件下，终端一致有效。如遇读请求，复位。这并不是官方提供模版的标准写法，我甚至没有补全其他的相关联函数，因为这样的理解已经实现了终端一致的要求，足够通过所有的测试了。 自立更生与舶来主义没有对错之分。一定要给自己足够的思考空间！一定要给自己足够的思考空间！一定要给自己足够的思考空间。我总结这三句，是因为前半学期的作业中，依赖他人思想过多。自己思考和交流讨论都是学习的基本方式。我自己总结了一个请教他人最佳的时间点：在对方不对你感到厌烦的同时，因为帮助你解决了问题而能极大满足自己虚荣心的那个时间就是最佳请教时间。嘿嘿，只是道理是这样讲的。 坚持看个标题就能懂了。也没有什么过多的内容，亘古不变的真理。对学习的坚持，不要轻言放弃；对学习习惯的坚持，习惯会提高能力。","categories":[{"name":"搏浪","slug":"搏浪","permalink":"http://ihozh.com/categories/搏浪/"}],"tags":[{"name":"总结","slug":"总结","permalink":"http://ihozh.com/tags/总结/"}]},{"title":"hexo 博客搭建","slug":"hexo-博客搭建","date":"2016-03-17T02:05:21.000Z","updated":"2016-03-17T16:08:16.000Z","comments":true,"path":"2016/03/16/hexo-博客搭建/","link":"","permalink":"http://ihozh.com/2016/03/16/hexo-博客搭建/","excerpt":"","text":"第一个标题心血来潮，在github上自己搭了个博客，写第一篇留个纪念吧。初探hexo，还有很多地方不懂，这篇博客也会持续更新探索hexo发现的好玩的事物。关于如何在github上搭建静态博客，网上的教程已经非常多了，大多很清晰，详细请看如何搭建一个独立博客。两个关键要素： github 和 域名 第二个标题虽然看了教程，但还是在一些地方花了不少时间。例如，在 _config.yml中，要填入值的:后边一定要留一个空格，不然是不会产生效果的。 域名解析我使用了DNSPod做域名解析。不论自动还是手动，要确保添加了主机纪录为www和@，记录类型为CNAME，记录值为xxxx.github.io的解析记录。这里解释下所谓的主机纪录就是域名前缀，常见的有www(万维网：www.xxx.com),@(直接解析：xxx.com),*(泛解析：*.xxx.com) 常用命令创建新的文章12hexo new &quot;My New Post&quot;hexo n 创建新页面1hexo new page img 前一条会在/source/_posts下生成一个新的｀.md｀文件，后一条会在/source/下生成新的文件夹 生成静态文件12hexo generatehexo g 本地服务器测试12hexo serverhexo s 部署github12hexo deployhexo d 如果部署Github时没有任何反应，需要安装hexo-deployer-git1npm install hexo-deployer-git --save Hexo配置123456language: zh-Hans #简体汉字# depolymentdeploy: type: git repo:&lt;ssh of github&gt; NEXT主题看到在知乎中主题排名第一，我就拿来用了，提供很多的有趣的内容，还在探索中。 增加菜单栏例如增加学习菜单： 12menu: 学习: /categories/学习/ #菜单的URL，绝对路径，在source下 如果要保证名字正常显示，进入｀‘主题路径’/language/zh-Hans.yml｀ 12menu: 学习: 学习 # 学习菜单显示为“学习” 添加侧边栏头像将头像命名为default_avatar.jpg 放入‘主题路径’/source/images下，可以看到侧边栏头像更改 添加logo123custom_logs: enabled: true image:&lt;image url&gt; #logo的绝对路径 添加tag页1hexo new page &quot;tags&quot; 在生成的 source/tags/index.md 添加 1type: &quot;tags&quot;","categories":[{"name":"杂货铺","slug":"杂货铺","permalink":"http://ihozh.com/categories/杂货铺/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://ihozh.com/tags/hexo/"}]}]}